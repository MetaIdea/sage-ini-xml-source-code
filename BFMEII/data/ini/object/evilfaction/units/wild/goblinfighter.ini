; Moved from WildInfantry.INI Aug 24 2005

Object GoblinFighter
  ; *** ART Parameters ***

	; This is required for garrisoned objects - please put in all objects.
	
	ButtonImage = WOR_GoblinFighters
	
	SelectPortrait = UPWild_GoblinWarrior
  
  Draw = W3DHordeModelDraw ModuleTag_01

	OkToChangeModelColor = Yes
	  
	StaticModelLODMode = Yes
	; specify options for static LODs
		LodOptions							= LOW
			AllowMultipleModels				= ALLOW_MULTIPLE_MODELS_LOW
			MaxRandomTextures				= MAX_RANDOM_TEXTURES_LOW
			MaxRandomAnimations				= MAX_RANDOM_ANIMATIONS_LOW
			MaxAnimFrameDelta				= MAX_ANIM_FRAME_DELTA_LOW
		End
		
		LodOptions							= MEDIUM
			AllowMultipleModels				= ALLOW_MULTIPLE_MODELS_MED
			MaxRandomTextures				= MAX_RANDOM_TEXTURES_MED
			MaxRandomAnimations				= MAX_RANDOM_ANIMATIONS_MED
			MaxAnimFrameDelta				= MAX_ANIM_FRAME_DELTA_MED
		End
		
		LodOptions							= HIGH
			AllowMultipleModels				= ALLOW_MULTIPLE_MODELS_HIGH
			MaxRandomTextures				= MAX_RANDOM_TEXTURES_HIGH
			MaxRandomAnimations				= MAX_RANDOM_ANIMATIONS_HIGH
			MaxAnimFrameDelta				= MAX_ANIM_FRAME_DELTA_HIGH
		End

		WadingParticleSys = WaterRipplesTrail  ; used when the unit is wading in shallow water.
		
		RandomTexture = MUGblnSwrd.tga 0 MUGblnSwrd.tga
		RandomTexture = MUGblnSwrd2.tga 0 MUGblnSwrd.tga
		RandomTexture = MUGblnSwrd3.tga 0 MUGblnSwrd.tga

    DefaultModelConditionState
      Model = MUGblnSwrd_SKN
      Skeleton = MUGblnSwrd_SKL
    End
    
    ModelConditionState = WEAPONSET_TOGGLE_1
			Model               = MUGblnSwrd_SKN
			Skeleton			= MUGblnSwrd_SKL
			ParticleSysBone		= FORGED_BLADE GoblinPoisonSword FollowBone:Yes
		End
    
;;==================== ANIMATIONS ================================================================
;;-------------------- FLYING & DYING ------------------------------------------------------------
;;======= FALLING

		AnimationState						= PASSENGER
			Animation						= Wiggling
				AnimationName				= MUGblnSwrd_FLLA
				AnimationMode				= LOOP
			End
		End
		
		AnimationState						= THROWN_PROJECTILE
			StateName						= STATE_Flying
			Animation						= Thrown
				AnimationName				= MUGblnSwrd_FLYA
				AnimationMode				= LOOP
			End
			Animation						= Thrown
				AnimationName				= MUGblnSwrd_FLYB
				AnimationMode				= LOOP
			End
			Animation						= Thrown
				AnimationName				= MUGblnSwrd_FLYC
				AnimationMode				= LOOP
			End
		End
		
		
	AnimationState						= CLIMBING
		StateName						= STATE_Climbing
		Animation						= Climbing
			AnimationName				= MUGblnSwrd_WALB
			AnimationMode				= LOOP
			AnimationBlendTime			= 10
		End
		BeginScript;script to set transition from moving
			Prev = CurDrawablePrevAnimationState()
			if Prev == "STATE_Running"  then CurDrawableSetTransitionAnimState("Trans_RunningToClimbing") return end
			if Prev == "STATE_Rappelling"  then CurDrawableSetTransitionAnimState("Trans_RappellingToClimbing") return end
		EndScript
	End
	TransitionState = Trans_RunningToClimbing
		Animation = Transition
			AnimationName = MUGblnSwrd_WALA
			AnimationMode = ONCE
		End
	End
	TransitionState = Trans_RappellingToClimbing
		Animation = Transition
			AnimationName = MUGblnSwrd_WALG
			AnimationMode = ONCE_BACKWARDS
		End
	End
	AnimationState						= RAPPELLING
		StateName						= STATE_Rappelling
		Animation						= Rapelling
			AnimationName				= MUGblnSwrd_WALE
			AnimationMode				= LOOP
			AnimationBlendTime			= 10
		End
		BeginScript;script to set transition from moving
			Prev = CurDrawablePrevAnimationState()
			if Prev == "STATE_Running"  then CurDrawableSetTransitionAnimState("Trans_RunningToRappelling") return end
			if Prev == "STATE_Climbing"  then CurDrawableSetTransitionAnimState("Trans_ClimbingToRappelling") return end
		EndScript
	End
	TransitionState = Trans_RunningToRappelling
		Animation = Transition
			AnimationName = MUGblnSwrd_WALD
			AnimationMode = ONCE
		End
	End
	TransitionState = Trans_ClimbingToRappelling
		Animation = Transition
			AnimationName = MUGblnSwrd_WALG
			AnimationMode = ONCE
		End
	End

		
		AnimationState						= FREEFALL
			Animation						= Falling
				AnimationName				= MUGblnSwrd_FLYB
				AnimationMode				= LOOP
				AnimationBlendTime			= 10
				AnimationSpeedFactorRange	= 0.7	0.7
			End
		End
		
		AnimationState						= STUNNED_FLAILING
			StateName						= STATE_Flying
			Animation						= ready_for_sweet_landing
				AnimationName				= MUGblnSwrd_FLYA
				AnimationMode				= LOOP
				AnimationSpeedFactorRange	= 0.4 0.6
				AnimationBlendTime			= 0
			End
			Animation						= flying
				AnimationName				= MUGblnSwrd_FLYB
				AnimationMode				= LOOP
				AnimationPriority			= 10
				AnimationSpeedFactorRange	= 0.4 0.6
				AnimationBlendTime			= 0
			End
			Flags							= RANDOMSTART
		End
		
		AnimationState			= DYING BURNINGDEATH
			Animation
				AnimationName	= MUGblnSwrd_DIEA
				AnimationMode	= ONCE
				AnimationBlendTime = 10
			End
			Animation
				AnimationName	= MUGblnSwrd_DIEB
				AnimationMode	= ONCE
				AnimationBlendTime = 10
			End
			Animation
				AnimationName	= MUGblnSwrd_DIEC
				AnimationMode	= ONCE
				AnimationBlendTime = 10
			End
		End

		AnimationState						= DYING SPLATTED
			Animation						= splat
				AnimationName				= MUGblnSwrd_LNDB
				AnimationMode				= ONCE
			End
		End


		
;;======= DYING

		AnimationState						= DYING AFLAME
			StateName						= STATE_Dead.
			Animation						= Flaming_Death
				AnimationName				= MUGblnSwrd_MFDA
				AnimationMode				= LOOP
			End
		End

		AnimationState						= DYING
			StateName						= STATE_Dead.
			Animation						= Dying_1
				AnimationName				= MUGblnSwrd_DIEA
				AnimationMode				= ONCE
			End
			Animation						= Dying_2
				AnimationName				= MUGblnSwrd_DIEB
				AnimationMode				= ONCE
			End
			Animation						= Dying_2
				AnimationName				= MUGblnSwrd_DIEC
				AnimationMode				= ONCE
			End
			Animation						= landb
				AnimationName				= MUGblnSwrd_LNDB
				AnimationMode				= ONCE
			End
			Animation						= landc
				AnimationName				= MUGblnSwrd_LNDC
				AnimationMode				= ONCE
			End
			BeginScript
				Preva = CurDrawablePrevAnimation()
				if Preva == "ready_for_sweet_landing" then return "landc" 
				elseif Preva == "flying" then return "landb"
				elseif GetClientRandomNumberReal(0,1) > 0.50 then return "Dying_1"
				else return "Dying_2" end
			EndScript
		End
		
		AnimationState						= STUNNED_STANDING_UP
			StateName						= STATE_Ready
			Animation						= standing_back_up
				AnimationName				= MUGblnSwrd_GTPA
				AnimationMode				= ONCE
				
			End
			Animation						= already_up
				AnimationName				= MUGblnSwrd_IDLB
				AnimationMode				= LOOP
				AnimationBlendTime			= 20
			End
			BeginScript
				if CurDrawablePrevAnimation() == "sweet_landing"
				then
					return "already_up"
				else
					return "standing_back_up"
				end
			EndScript
		End
				
		AnimationState						= STUNNED
			StateName						= STATE_Stunned
			Animation						= splatted_on_ground
				AnimationName				= MUGblnSwrd_LNDC
				AnimationMode				= ONCE
			End
			Animation						= sweet_landing
				AnimationName				= MUGblnSwrd_LNDA
				AnimationMode				= ONCE
			End
			BeginScript
				if CurDrawablePrevAnimation() == "ready_for_sweet_landing"
				then
					return "sweet_landing"
				else
					return "splatted_on_ground"
				end
			EndScript
		End

		AnimationState			= BURNINGDEATH
			Animation
				AnimationName	= MUGblnSwrd_MFDA
				AnimationMode	= LOOP
				Distance		= 30
			End
		End

		AnimationState						= PARALYZED
			Animation
				AnimationName				= MUGblnSwrd_IDLA
				AnimationMode				= LOOP
			End
		End

		

  ;;------------------ MOVING -----------------------------------------------------------------------
  
  
  
		AnimationState = MOVING FIRING_OR_PREATTACK_A
			Animation = TrotAndFire
				AnimationName = MUGblnSwrd_RUNA    ; MUGblnSwrd_ATRA doesn't exist..
				AnimationMode = LOOP
			End
			Flags = RANDOMSTART
			;ParticleSysBone = None InfantryDustTrails
		End
    
		AnimationState						= MOVING BACKING_UP
			Animation						= BackingUp
				AnimationName				= MUGblnSwrd_BAKA
				AnimationMode				= LOOP
				AnimationSpeedFactorRange	= 0.9 1.1
			End
			Animation						= BackingUp
				AnimationName				= MUGblnSwrd_BAKB
				AnimationMode				= LOOP
				AnimationSpeedFactorRange	= 0.9 1.1
			End
			Animation						= BackingUp
				AnimationName				= MUGblnSwrd_BAKC
				AnimationMode				= LOOP
				AnimationSpeedFactorRange	= 0.9 1.1
			End
			Flags							= RANDOMSTART
		End
		
		AnimationState						= MOVING EMOTION_TERROR
			ShareAnimation					= Yes
			Animation						= Moving_1
				AnimationName				= MUGblnSwrd_RUNA
				AnimationMode				= LOOP
				;AnimationSpeedFactorRange	= 0.9 1.1
				AnimationSpeedFactorRange	= 0.5 0.6
				Distance					= 20
			End
;			Animation						= Moving_3
;				AnimationName				= MUGblnSwrd_RUNC
;				AnimationMode				= LOOP
;				AnimationSpeedFactorRange	= 0.9 1.1
;			End
			Flags							= RANDOMSTART
			ParticleSysBone					= None InfantryDustTrails
		End
		
		AnimationState						= MOVING
			StateName						= STATE_Running
			ShareAnimation					= Yes
			Animation						= Moving_1
				AnimationName				= MUGblnSwrd_RUNA
				AnimationMode				= LOOP
				;AnimationSpeedFactorRange	= 0.9 1.1
				AnimationSpeedFactorRange	= 0.5 0.6
				Distance					= 20
			End
;			Animation						= Moving_3
;				AnimationName				= MUGblnSwrd_RUNC
;				AnimationMode				= LOOP
;				AnimationSpeedFactorRange	= 0.9 1.1
;				Distance					= 10
;			End
			Flags							= RANDOMSTART
			ParticleSysBone					= None InfantryDustTrails
			BeginScript;script to set transition into moving
				Prev = CurDrawablePrevAnimationState()
				if Prev == "STATE_Climbing"  then CurDrawableSetTransitionAnimState("Trans_ClimbingToRunning") return end
				if Prev == "STATE_Rappelling"  then CurDrawableSetTransitionAnimState("Trans_RappellingToRunning") return end
			EndScript
		End
	TransitionState = Trans_ClimbingToRunning
		Animation = Transition
			AnimationName = MUGblnSwrd_WALC
			AnimationMode = ONCE
		End
		Animation = Transition
			AnimationName = MUGblnSwrd_WALH
			AnimationMode = ONCE
		End
	End
	TransitionState = Trans_RappellingToRunning
		Animation = Transition
			AnimationName = MUGblnSwrd_WALF
			AnimationMode = ONCE
		End
	End

		
;;------------------ ATTACKING ------------------------------------------------------------
		
		AnimationState						= FIRING_OR_PREATTACK_A
			StateName						= STATE_Ready
			Animation						= ATKA
				AnimationName				= MUGblnSwrd_ATKA
				AnimationMode				= ONCE
				UseWeaponTiming				= Yes	
			End
			Animation						= ATKA
				AnimationName				= MUGblnSwrd_ATKC
				AnimationMode				= ONCE
				UseWeaponTiming				= Yes	
			End
		End
		
;;------------------ EMOTIONS ------------------------------------------------------------

		AnimationState						= EMOTION_AFRAID
			Animation						= FERA
				AnimationName				= MUGblnSwrd_FERA
				AnimationMode				= LOOP
			End
			Animation						= FERB
				AnimationName				= MUGblnSwrd_FERB
				AnimationMode				= LOOP
			End
			Animation						= FERC
				AnimationName				= MUGblnSwrd_FERC
				AnimationMode				= LOOP
			End
			Flags							= RANDOMSTART
		End
		AnimationState						= EMOTION_TAUNTING
			Animation						= TNTA
				AnimationName				= MUGblnSwrd_TNTA
				AnimationMode				= LOOP
			End
			Animation						= TNTB
				AnimationName				= MUGblnSwrd_TNTB
				AnimationMode				= LOOP
			End
			Animation						= TNTC
				AnimationName				= MUGblnSwrd_TNTC
				AnimationMode				= LOOP
			End
			Flags							= RANDOMSTART
		End
		AnimationState						= EMOTION_POINTING
			Animation						= Pointing1A
				AnimationName				= MUGblnSwrd_PNTA
				AnimationMode				= LOOP
			End
			Animation						= Pointing1B
				AnimationName				= MUGblnSwrd_PNTB
				AnimationMode				= LOOP
			End
			Animation						= Pointing1C
				AnimationName				= MUGblnSwrd_PNTC
				AnimationMode				= LOOP
			End
			Flags							= RANDOMSTART
		End
		AnimationState						= EMOTION_CELEBRATING
			Animation						= CHRA
				AnimationName				= MUGblnSwrd_CHRA
				AnimationMode				= LOOP
			End
			Animation						= CHRB
				AnimationName				= MUGblnSwrd_CHRB
				AnimationMode				= LOOP
			End
			Animation						= CHRC
				AnimationName				= MUGblnSwrd_CHRC
				AnimationMode				= LOOP
			End
			Flags							= RANDOMSTART
		End
		AnimationState						= EMOTION_ALERT
			Animation						= IDLB
				AnimationName				= MUGblnSwrd_IDLB
				AnimationMode				= LOOP
			End
			Flags							= RANDOMSTART
		End
		
		AnimationState						= RAISING_FLAG
			Animation						= CHRA
				AnimationName				= MUGblnSwrd_CHRA
				AnimationMode				= LOOP
			End
			Animation						= CHRB
				AnimationName				= MUGblnSwrd_CHRB
				AnimationMode				= LOOP
			End
			Animation						= CHRC
				AnimationName				= MUGblnSwrd_CHRC
				AnimationMode				= LOOP
			End
		End

;;------------------ SELECTED STATE --------------------------------------------------------

		AnimationState = SELECTED
			Animation				= Selected_Loop
				AnimationName		= MUGblnSwrd_ATNB
				AnimationMode		= LOOP
				AnimationBlendTime	= 10
			End
			StateName				= Selected
			BeginScript
				Prev = CurDrawablePrevAnimationState()
				if Prev == "Idle"	then CurDrawableSetTransitionAnimState("Trans_Down_To_Up") return end			
				if Prev == "Selected" then CurDrawableSetTransitionAnimState("Trans_Up_To_Down") end
			EndScript
			Flags = RESTART_ANIM_WHEN_COMPLETE
		End
		

		; --- transition states --- ;
		
		TransitionState = Trans_Down_To_Up
			Animation = Transition
				AnimationName = MUGblnSwrd_ATNA
				AnimationMode = ONCE
			End
		End
	    
		TransitionState = Trans_Up_To_Down
			Animation = Transition
				AnimationName = MUGblnSwrd_ATNC
				AnimationMode = ONCE
			End
		End

;;------------------ IDLE STATE ------------------------------------------------------------
		
		IdleAnimationState
			StateName						= Idle
			Animation						= IDLA
				AnimationName				= MUGblnSwrd_IDLA
				AnimationMode				= ONCE
				AnimationSpeedFactorRange	= 0.9 1.1
				AnimationPriority			= 10
			End
			Animation						= IDLB
				AnimationName				= MUGblnSwrd_IDLB
				AnimationMode				= ONCE
				AnimationSpeedFactorRange	= 0.9 1.1
				AnimationPriority			= 10
			End
			Animation						= IDLC
				AnimationName				= MUGblnSwrd_IDLC
				AnimationMode				= ONCE
				AnimationSpeedFactorRange	= 0.9 1.1
				AnimationPriority			= 5
			End
			Animation						= IDLD
				AnimationName				= MUGblnSwrd_IDLD
				AnimationMode				= ONCE
				AnimationSpeedFactorRange	= 0.9 1.1
				AnimationPriority			= 5
			End
			Animation						= IDLE
				AnimationName				= MUGblnSwrd_IDLE
				AnimationMode				= ONCE
				AnimationSpeedFactorRange	= 0.9 1.1
				AnimationPriority			= 5
			End
			BeginScript
				Prev = CurDrawablePrevAnimationState()
				if Prev == "STATE_Planted"	then CurDrawableSetTransitionAnimState("Trans_Down_To_Up") return end
//				if Prev == "Selected" or Prev == "Trans_Down_To_Up" then CurDrawableSetTransitionAnimState("TRANS_SB_Normal") end
			EndScript			
		End
		
;;-------------------- TRANSITIONS ---------------------------------------------------------
 
;;------------------------------------------------------------------------------------------    
  End

    #include "..\..\..\includes\StunDrawModuleSmall.inc"

  ; ***DESIGN parameters ***
	Side			= Wild
	IsTrainable		= Yes
	EditorSorting	= UNIT
	ThreatLevel		= 1.0
	ThingClass		= HORDE_UNIT
	CommandPoints	= 3
	TransportSlotCount = TRANSPORTSLOTCOUNT_UNIT
	
	WeaponSet
		Conditions = None 
		Weapon = PRIMARY    GoblinFighterSword
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	End
	
	; weapon for poison and upgraded
	; why oh why do I have to make four separate weapons?
	WeaponSet
		Conditions = WEAPONSET_TOGGLE_1 PLAYER_UPGRADE
		Weapon = PRIMARY GoblinFighterSwordPoisonedUpgraded
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	End

	; weapon for poisoned
	; why oh why do I have to make four separate weapons?
	WeaponSet
		Conditions = WEAPONSET_TOGGLE_1
		Weapon = PRIMARY GoblinFighterSwordPoisoned
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	End
	
	; weapon for just upgraded
	; why oh why do I have to make four separate weapons?
	WeaponSet
		Conditions = PLAYER_UPGRADE
		Weapon = PRIMARY    GoblinFighterSwordUpgraded
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	End
	
	ArmorSet
		Conditions      = None
		Armor           = GoblinFighterArmor
		DamageFX        = NormalDamageFX
	End
	
	ArmorSet
		Conditions		= PLAYER_UPGRADE
		Armor			= WildFighterScavengedArmor
		DamageFX        = NormalDamageFX
	End
	
	VisionRange = GOBLIN_FIGHTER_VISION_RANGE	
	ShroudClearingRange = SHROUD_CLEAR_STANDARD 
	
	VisionSide = 35%
	VisionRear = 25%
	
	MaxVisionBonusPercent = 300%
	VisionBonusTestRadius = 200
	VisionBonusPercentPerFoot = 2.0%
	
	DisplayName			= OBJECT:GoblinFighter
	CrushableLevel		= 0		;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
	CrusherLevel		= 0		;What can I crush?: 0 = small animals, 1 = infantry, 2 = trees, 3 = vehicles
	BountyValue			= GOBLIN_FIGHTER_BOUNTY_VALUE
	CrushRevengeWeapon	= BasicInfantryCrushRevenge
	CommandSet			= GoblinFighterCommandSet

	; *** AUDIO Parameters ***;

	VoiceAttack								= GoblinWarriorVoiceAttack
	VoiceAttackCharge						= GoblinWarriorVoiceAttackCharge
	VoiceAttackMachine						= GoblinWarriorVoiceAttack
	VoiceAttackStructure					= GoblinWarriorVoiceAttackBuilding
	VoiceCreated							= EVA:GoblinWarriorCreated
	VoiceFullyCreated						= EVA:GoblinWarriorCreated
	VoiceGuard								= GoblinWarriorVoiceGuard
	VoiceMove								= GoblinWarriorVoiceMove
	VoiceMoveOverWalls						= GoblinWarriorVoiceMoveWalls
	VoiceMoveToCamp							= GoblinWarriorVoiceMoveCamp
	VoiceMoveWhileAttacking					= GoblinWarriorVoiceDisengage
	VoicePriority							= 30
	VoiceRetreatToCastle					= GoblinWarriorVoiceRetreat
	VoiceSelect								= GoblinWarriorVoiceSelectMS
	VoiceSelectBattle 						= GoblinWarriorVoiceSelectBattle

	VoiceEnterStateAttack					= GoblinWarriorVoiceEnterStateAttack
	VoiceEnterStateAttackCharge				= GoblinWarriorVoiceEnterStateAttackCharge
	VoiceEnterStateAttackMachine			= GoblinWarriorVoiceEnterStateAttack
	VoiceEnterStateAttackStructure			= GoblinWarriorVoiceEnterStateAttackBuilding
	VoiceEnterStateMove						= GoblinWarriorVoiceEnterStateMove
	VoiceEnterStateMoveOverWalls			= GoblinWarriorVoiceEnterStateMoveWalls
	VoiceEnterStateMoveToCamp				= GoblinWarriorVoiceEnterStateMoveCamp
	VoiceEnterStateMoveWhileAttacking		= GoblinWarriorVoiceEnterStateDisengage
	VoiceEnterStateRetreatToCastle			= GoblinWarriorVoiceEnterStateRetreat

	SoundImpact								= ImpactHorse

	UnitSpecificSounds
		VoiceEnterUnitEvilMenTransportShip	= GoblinWarriorVoiceMoveShip
		VoiceEnterUnitMordorMumakil			= GoblinWarriorVoiceMoveGarrison
		VoiceEnterUnitSlaughterHouse		= GoblinWarriorVoiceMoveGarrison
		VoiceGarrison						= GoblinWarriorVoiceMoveGarrison
		VoiceInitiateCaptureBuilding		= GoblinWarriorVoiceCaptureBuilding
	End

	CrowdResponseKey = Goblin

	ClientBehavior = ModelConditionAudioLoopClientBehavior ModuleTag_foo
		;ModelCondition = Required:EMOTION_CELEBRATING	Excluded:DYING ENGAGED	Sound:EmotionGoblinCompilationVoxCheerSinglesLoop	;MOVING ATTACKING 
		;ModelCondition = Required:EMOTION_TAUNTING		Excluded:DYING ENGAGED	Sound:EmotionGoblinCompilationVoxTauntSinglesLoop	;MOVING ATTACKING
		ModelCondition = Required:RAISING_FLAG			Excluded:DYING ENGAGED	Sound:EmotionGoblinCompilationVoxTauntSinglesLoop
	End

	;Waiting to see if the emotion system is going to be improved first before hooking up emotional audio
	;
	;ClientBehavior = ModelConditionAudioLoopClientBehavior ModuleTag_ModelConditionAudioLoop
	;	ModelCondition = Required:EMOTION_POINTING		Sound:GoblinWarriorVoicePointLoop
	;	ModelCondition = Required:EMOTION_AFRAID 		Sound:GoblinWarriorVoiceFearLoop
	;	ModelCondition = Required:EMOTION_TAUNTING		Sound:GoblinWarriorVoiceTauntLoop
	;	ModelCondition = Required:EMOTION_CELEBRATING	Sound:GoblinWarriorVoiceCheerLoop
	;End

    #include "..\..\..\includes\StandardUnitEvaEvents.inc"

	ClientBehavior = AnimationSoundClientBehavior ModuleTag_AnimAudioBehavior
      	MaxUpdateRangeCap = 800
		AnimationSound = Sound:BodyFallGeneric2	Animation:MUGblnSwrd_SKL.MUGblnSwrd_DIEA	Frames:10
		AnimationSound = Sound:BodyFallGeneric2	Animation:MUGblnSwrd_SKL.MUGblnSwrd_DIEB	Frames:7
		AnimationSound = Sound:BodyFallOrc		Animation:MUGblnSwrd_SKL.MUGblnSwrd_LNDB	Frames:6
		AnimationSound = Sound:BodyFallOrc		Animation:MUGblnSwrd_SKL.MUGblnSwrd_LNDC	Frames:3
	End

	Behavior = LargeGroupAudioUpdate ModuleTag_LGAU		;Tie into LargeGroupAudio system
		Key = Goblin
	End

  ; *** ENGINEERING Parameters ***

	Behavior = SpecialPowerModule ModuleTag_PoisonedBladeSpecialPower                      
		SpecialPowerTemplate		= SpecialAbilityGoblinFighterPoisonedBlades
		StartsPaused				= No
	End

	Behavior = WeaponModeSpecialPowerUpdate ModuleTag_PoisonedBladeUpdate
		SpecialPowerTemplate		= SpecialAbilityGoblinFighterPoisonedBlades
		Duration					= 20000
		WeaponSetFlags				= WEAPONSET_TOGGLE_1
		StartsPaused				= No
	End

  RadarPriority = UNIT
  KindOf = PRELOAD SELECTABLE CAN_CAST_REFLECTIONS INFANTRY PATH_THROUGH_EACH_OTHER SCORE THROWN_OBJECT GRAB_AND_DROP CAN_CLIMB_WALLS
 
  Body = ActiveBody ModuleTag_02
    MaxHealth         = GOBLIN_FIGHTER_HEALTH
    MaxHealthDamaged  = GOBLIN_FIGHTER_HEALTH_DAMAGED
	BurningDeathBehavior = Yes
	BurningDeathFX       = FX_InfantryBurningFlame
  End
 
  Behavior = AIUpdateInterface ModuleTag_03
    AutoAcquireEnemiesWhenIdle	= Yes ATTACK_BUILDINGS
    MoodAttackCheckRate			= 500
	AILuaEventsList				=	IsengardFighterFunctions
    AttackPriority				= 	AttackPriority_Infantry
	BurningDeathTime			=	BURNINGDEATH_DURATION_INFANTRY
  End


  LocomotorSet
    Locomotor     = TestWallScalingHordeLocomotor
    Condition     = SET_NORMAL
    Speed         = NORMAL_WILD_FAST_MEMBER_SPEED
  End

  LocomotorSet
    Locomotor     = HumanWanderLocomotor
    Condition     = SET_WANDER
    Speed         = NORMAL_WILD_FAST_MEMBER_SPEED
  End

	LocomotorSet
		Locomotor = BurningDeathLocomotorInfantry
		Condition = SET_BURNINGDEATH
		Speed	  = BURNINGDEATH_WANDERSPEED_INFANTRY
	End

  Behavior = PhysicsBehavior ModuleTag_04
    GravityMult				= 1.0
    ShockStunnedTimeLow		= 800	;msec
    ShockStunnedTimeHigh	= 1000	;msec
    ShockStandingTime		= 2133	;msec
  End
 
  Behavior = SlowDeathBehavior ModuleTag_05
    DeathTypes			= ALL -KNOCKBACK
    SinkDelay			= 3000
    SinkRate			= 0.40     ; in Dist/Sec
    DestructionDelay	= 8000
    Sound				= INITIAL GoblinVoxDieMS
  End
 
  Behavior = SquishCollide ModuleTag_06
    ;nothing
  End
 
  Behavior = HordeMemberCollide ModuleTag_HMC
    ;nothing
  End 
 
  Behavior = SlowDeathBehavior ModuleTag_07
    ; Same as normal death, but no sound (sound already played by SoundImpact = ... )
    DeathTypes			= NONE +KNOCKBACK
    SinkDelay			= 3000
    SinkRate			= 0.40     ; in Dist/Sec
    DestructionDelay	= 8000
    Sound				= INITIAL GoblinVoxDieMS
  End
  
  Behavior = BezierProjectileBehavior ModuleTag_08 ; Module starts asleep, and wakes up when thrown.
    ; 
    FirstHeight				= 24  ; Height of Bezier control points above highest intervening terrain
    SecondHeight			= 24
    FirstPercentIndent		= 30% ; Percentage of shot distance control points are placed
    SecondPercentIndent		= 70%
    TumbleRandomly			= Yes

    CrushStyle				= Yes ; I don't detonate, I just hit
    DieOnImpact				= Yes
    BounceCount				= 1   ; When I hit the ground, I'll arc again
    BounceDistance			= 40 ; this far
    BounceFirstHeight		= 24  ; Height of Bezier control points above highest intervening terrain
    BounceSecondHeight		= 24
    BounceFirstPercentIndent = 20% ; Percentage of shot distance control points are placed
    BounceSecondPercentIndent = 80%

    GroundHitFX       = FX_ThrownRockGroundHit
    GroundBounceFX    = FX_ThrownRockBounceHit
  End		
	
	;-------------------------Units Upgrades----------------------------------
	; Scavenged Armor upgrade
	Behavior = ArmorUpgrade WildModuleArmorUpgrade
		TriggeredBy		=	Upgrade_WildHeavyArmor
		;ArmorSetFlag	=	PLAYER_UPGRADE
	End
	
	Behavior = SubObjectsUpgrade Armor_Upgrade
		TriggeredBy		=	Upgrade_WildHeavyArmor
		UpgradeTexture  =   MUGblnSwrd.tga 0 MUGblnSwrd_HA.tga
		UpgradeTexture	=	MUGblnSwrd2.tga 0 MUGblnSwrd2_HA.tga
		UpgradeTexture	=	MUGblnSwrd3.tga 0 MUGblnSwrd3_HA.tga
		RecolorHouse    =   Yes
		ExcludeSubobjects = Forged_Blade
	End
	
	; Forged Blades
	Behavior = WeaponSetUpgrade WeaponSetUpgradeModuleTag
		TriggeredBy = Upgrade_WildForgedBlades
	End
	
	Behavior = SubObjectsUpgrade Sword_Upgrade
		TriggeredBy = Upgrade_WildForgedBlades
		ShowSubObjects	= Forged_Blade
	END
    
  Geometry				= CYLINDER
  GeometryMajorRadius	= 8.0
  GeometryMinorRadius	= 8.0
  GeometryHeight		= 19.2
  GeometryIsSmall		= Yes
  
  Shadow				= SHADOW_DECAL
  ShadowSizeX			= 11
  ShadowSizeY			= 11
  ShadowTexture			= ShadowI
End
