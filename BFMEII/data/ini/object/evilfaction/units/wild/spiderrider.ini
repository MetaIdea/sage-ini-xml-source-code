;----------------------------------------------------------------------------------------------------------------------
;
;	GoblinSpiderRider
;
;----------------------------------------------------------------------------------------------------------------------
Object GoblinSpiderRider
	; ***ART Parameters ***

	SelectPortrait          = UPWild_SpiderRider
	ButtonImage		= WOR_SpiderRider

	Draw = W3DHordeModelDraw ModuleTag_01

	  OkToChangeModelColor = Yes
	  
    StaticModelLODMode = yes ; Will append M or L to the skin name depending on GameLOD
    LodOptions							= LOW
		AllowMultipleModels				= ALLOW_MULTIPLE_MODELS_LOW
		MaxRandomTextures				= MAX_RANDOM_TEXTURES_LOW
		MaxRandomAnimations				= MAX_RANDOM_ANIMATIONS_LOW
		MaxAnimFrameDelta				= MAX_ANIM_FRAME_DELTA_LOW
	End
	
	LodOptions							= MEDIUM
		AllowMultipleModels				= ALLOW_MULTIPLE_MODELS_MED
		MaxRandomTextures				= MAX_RANDOM_TEXTURES_MED
		MaxRandomAnimations				= MAX_RANDOM_ANIMATIONS_MED
		MaxAnimFrameDelta				= MAX_ANIM_FRAME_DELTA_MED
	End
	
	LodOptions							= HIGH
		AllowMultipleModels				= ALLOW_MULTIPLE_MODELS_HIGH
		MaxRandomTextures				= MAX_RANDOM_TEXTURES_HIGH
		MaxRandomAnimations				= MAX_RANDOM_ANIMATIONS_HIGH
		MaxAnimFrameDelta				= MAX_ANIM_FRAME_DELTA_HIGH
	End
    
;;====================== MODELS ================================================================
; --------- With Sword ------------
		DefaultModelConditionState
			Model						= MUSpidRdr_SKN
			Skeleton					= MUSpidRdr_SKL
			ParticleSysBone Sword01 SpiderRiderPoison FollowBone:Yes Persist:SPAWN PersistID:100
			ParticleSysBone Sword01 SpiderRiderPoison2 FollowBone:Yes Persist:SPAWN PersistID:101
		End

; --------- With Bow (including Fire Arrows Upgrade)------------
		ModelConditionState				= WEAPONSET_TOGGLE_1
			WeaponLaunchBone			= PRIMARY FIREAROWTIP
			ParticleSysBone Sword01 SpiderRiderPoison FollowBone:Yes Persist:HOLD PersistID:100
			ParticleSysBone Sword01 SpiderRiderPoison2 FollowBone:Yes Persist:HOLD PersistID:101
		End


;;================== ANIMATIONS =================================================================

		
		;//--------------WallScaling---------------

		AnimationState						= CLIMBING
			StateName						= STATE_Climbing
			Animation						= Climbing
				AnimationName				= MUSpidRdr_WALB
				AnimationMode				= LOOP
				AnimationBlendTime			= 10
			End
			BeginScript;script to set transition from moving
				Prev = CurDrawablePrevAnimationState()
				if Prev == "STATE_Running"  then CurDrawableSetTransitionAnimState("Trans_RunningToClimbing") return end
				;if Prev == "STATE_Rappelling"  then CurDrawableSetTransitionAnimState("Trans_RappellingToClimbing") return end
			EndScript
		End
		TransitionState = Trans_RunningToClimbing
			Animation = Transition
				AnimationName = MUSpidRdr_WALC
				AnimationMode = ONCE
			End
		End
		AnimationState						= RAPPELLING
			StateName						= STATE_Rappelling
			Animation						= Rapelling
				AnimationName				= MUSpidRdr_WALD
				AnimationMode				= LOOP
				AnimationBlendTime			= 10
			End
			BeginScript;script to set transition from moving
				Prev = CurDrawablePrevAnimationState()
				if Prev == "STATE_Running"  then CurDrawableSetTransitionAnimState("Trans_RunningToRappelling") return end
				;if Prev == "STATE_Climbing"  then CurDrawableSetTransitionAnimState("Trans_ClimbingToRappelling") return end
			EndScript
		End
		TransitionState = Trans_RunningToRappelling
			Animation = Transition
				AnimationName = MUSpidRdr_WALG
				AnimationMode = ONCE
			End
		End
		TransitionState = Trans_ClimbingToRunning
			Animation = Transition
				AnimationName = MUSpidRdr_WALF
				AnimationMode = ONCE
			End
		End
		TransitionState = Trans_RappellingToRunning
			Animation = Transition
				AnimationName = MUSpidRdr_WALE
				AnimationMode = ONCE
			End
		End
			
			
		; ------ Flying ------- ;
			
		AnimationState					= PASSENGER WEAPONSET_TOGGLE_1
			StateName					= STATE_Grabbed
			Animation					= Bow
				AnimationName			= MUSpidRdr_FLYB
				AnimationMode			= LOOP
			End
		End
		
		AnimationState					= PASSENGER
			StateName					= STATE_Grabbed
			Animation					= Sword
				AnimationName			= MUSpidRdr_FLYA
				AnimationMode			= LOOP
			End
		End
		
		AnimationState					= FREEFALL WEAPONSET_TOGGLE_1
			StateName					= STATE_Falling
			Animation					= Bow
				AnimationName			= MUSpidRdr_FLYB
				AnimationMode			= LOOP
				AnimationBlendTime		= 10
			End
		End
		
		AnimationState					= FREEFALL
			StateName					= STATE_Falling
			Animation					= Sword
				AnimationName			= MUSpidRdr_FLYA
				AnimationMode			= LOOP
				AnimationBlendTime		= 10
			End
		End
		
		AnimationState        			= STUNNED_FLAILING WEAPONSET_TOGGLE_1
			StateName					= STATE_Fly
			Animation
				AnimationName       	= MUSpidRdr_FLYB
				AnimationMode       	= LOOP
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES2
		End
		
		AnimationState        			= STUNNED_FLAILING
			StateName					= STATE_Fly
			Animation           		= Sword
				AnimationName       	= MUSpidRdr_FLYA
				AnimationMode       	= LOOP
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES2
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "Ready_Bow" or PrevState == "Moving_Bow" or PrevState == "Bored_Bow"
				then
					CurDrawableShowSubObject("arrrow")
					return "WantSword"
				elseif PrevState == "STATE_Fly"
				then
					if PrevAnim == "Bow" or PrevAnim == "WantSword"
					then
						CurDrawableShowSubObject("arrrow")
						return "WantSword"
					end
				end
					
				CurDrawableHideSubObject("arrrow")
				return "Sword"
			EndScript
		End

		AnimationState					= DYING BURNINGDEATH
			Animation					= Bow
				AnimationName			= MUSpidRdr_DIEB
				AnimationMode			= ONCE
				AnimationBlendTime		= 10
			End
		End

		AnimationState					= DYING SPLATTED WEAPONSET_TOGGLE_1
			StateName					= STATE_Dead
			Animation					= Bow
				AnimationName			= MUSpidRdr_LNDB
				AnimationMode			= ONCE
			End
		End
		
		AnimationState					= DYING  SPLATTED
			StateName					= STATE_Dead
			Animation					= Sword
				AnimationName			= MUSpidRdr_LNDA
				AnimationMode			= ONCE
			End
		End
		
				; ------ Dying ------- ;

		AnimationState        			= DYING WEAPONSET_TOGGLE_1
			Animation           		= Bow1
				AnimationName       	= MUSpidRdr_DIEB
				AnimationMode       	= ONCE
			End
			Animation           		= Bow2
				AnimationName       	= MUSpidRdr_DIED
				AnimationMode       	= ONCE
			End
			Animation           		= WantBow
				AnimationName       	= MUSpidRdr_LNDB
				AnimationMode       	= ONCE
			End
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				
				if PrevState == "STATE_Fly"
				then
					CurDrawableHideSubObject("arrrow")
					return "WantBow"
				end
				
				if GetClientRandomNumberReal(0,2) < 1
				then
					CurDrawableShowSubObject("arrrow")
					return "Bow1"
				else
					CurDrawableShowSubObject("arrrow")
					return "Bow2"
				end
			EndScript
		End
		
		AnimationState        			= DYING
			Animation           		= Sword1
				AnimationName       	= MUSpidRdr_DIEA
				AnimationMode       	= ONCE
			End
			Animation           		= WantSword
				AnimationName       	= MUSpidRdr_DIEC
				AnimationMode       	= ONCE
			End
			
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_Fly"
				then
					CurDrawableShowSubObject("arrrow")
					return "WantSword"
				end
			
				CurDrawableHideSubObject("arrrow")
				if GetClientRandomNumberReal(0,2) < 1
				then
					return "Sword1"
				else
					return "WantSword"
				end
			EndScript
		End

		AnimationState        			= STUNNED_STANDING_UP WEAPONSET_TOGGLE_1
			StateName					= STATE_GetUp
			Animation           		= Bow
				AnimationName       	= MUSpidRdr_GTPB
				AnimationMode       	= ONCE
			End
			Animation           		= WantBow
				AnimationName       	= MUSpidRdr_GTPA
				AnimationMode       	= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_GetUp" or PrevState == "STATE_Land"
				then
					if PrevAnim == "WantBow" or PrevAnim == "Sword"
					then
						CurDrawableHideSubObject("arrrow")
						return "WantBow"
					end
				else
					CurDrawableShowSubObject("arrrow")
					return "Bow"
				end
			EndScript
		End

		AnimationState        			= STUNNED_STANDING_UP
			StateName					= STATE_GetUp
			Animation           		= Sword
				AnimationName       	= MUSpidRdr_GTPA
				AnimationMode       	= ONCE
			End
			Animation           		= WantSword
				AnimationName       	= MUSpidRdr_GTPB
				AnimationMode       	= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_GetUp" or PrevState == "STATE_Land"
				then
					if PrevAnim == "Bow" or PrevAnim == "WantSword"
					then	
						CurDrawableShowSubObject("arrrow")
						return "WantSword"
					end
				end
				
				CurDrawableHideSubObject("arrrow")
				return "Sword"
			EndScript
		End
		
		AnimationState        			= STUNNED WEAPONSET_TOGGLE_1
			StateName					= STATE_Land
			Animation           		= Bow
				AnimationName       	= MUSpidRdr_LNDA
				AnimationMode       	= ONCE
			End
			Animation           		= WantBow
				AnimationName       	= MUSpidRdr_LNDB
				AnimationMode       	= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES3
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_Fly"
				then
					if PrevAnim == "WantBow" or PrevAnim == "Sword"
					then
						CurDrawableHideSubObject("arrrow")
						return "WantBow"
					end
				end
				
				CurDrawableShowSubObject("arrrow")
				return "Bow"
			EndScript
		End

		AnimationState        			= STUNNED
			StateName					= STATE_Land
			Animation           		= Sword
				AnimationName       	= MUSpidRdr_LNDA
				AnimationMode       	= ONCE
			End
			Animation           		= WantSword
				AnimationName       	= MUSpidRdr_LNDB
				AnimationMode       	= ONCE
			End
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_Fly"
				then
					if PrevAnim == "WantSword" or PrevAnim == "Bow"
					then
						CurDrawableShowSubObject("arrrow")
						return "WantSword"
					end
				end
				Flags						= MAINTAIN_FRAME_ACROSS_STATES3
				CurDrawableHideSubObject("arrrow")
				return "Sword"
			EndScript
		End
		
		AnimationState						= BURNINGDEATH
			Animation
				AnimationName				= MUSpidRdr_MFDA
				AnimationMode				= LOOP
				Distance					= 55
			End
		End

		AnimationState						= PARALYZED
			Animation
				AnimationName				= MUSpidRdr_IDLA
				AnimationMode				= LOOP
			End
		End

		AnimationState        			= ATTACKING TURN_LEFT WEAPONSET_TOGGLE_1
			StateName					= Moving_Bow
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpidRdr_TNLBH
				AnimationMode       	= LOOP
			End
		End

		AnimationState        			= ATTACKING TURN_LEFT
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpidRdr_TRNLH
				AnimationMode       	= LOOP
			End
		End

		AnimationState        			= ATTACKING TURN_RIGHT WEAPONSET_TOGGLE_1 
			StateName					= Moving_Bow
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpidRdr_TNRBH
				AnimationMode       	= LOOP
			End
		End
		
		AnimationState        			= ATTACKING TURN_RIGHT
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpidRdr_TRNRH
				AnimationMode       	= LOOP
			End
		End

		

		; ------ Attacking ------- ;
		
//		AnimationState					= CONTINUOUS_FIRE_MEAN WEAPONSET_TOGGLE_1
//			Animation
//				AnimationName			= MUSpidRdr_ATKB
//				AnimationMode			= LOOP
//				AnimationBlendTime		= 20				; Must be 0 blend time otherwise the arrow will linger for the duration of the blend!
//			End
//			
//			BeginScript
//				CurDrawableShowSubObject("arrrow")
//			EndScript
//		End

		AnimationState					= FIRING_OR_PREATTACK_A WEAPONSET_TOGGLE_1
			Animation
				AnimationName			= MUSpidRdr_ATKB
				AnimationMode			= ONCE
				AnimationBlendTime		= 15				; Must be 0 blend time otherwise the arrow will linger for the duration of the blend!
			End
			
			Flags						= MAINTAIN_FRAME_ACROSS_STATES
			FrameForPristineBonePositions = 16
			
			BeginScript
				CurDrawableShowSubObject("arrrow")
			EndScript
		End

		AnimationState					=	BETWEEN_FIRING_SHOTS_A WEAPONSET_TOGGLE_1
			Animation					=	BetweenFiringShots
				AnimationName			=	MUSpidRdr_IDLB
				AnimationMode			=	LOOP
				AnimationBlendTime		=   15
			End
		End

		AnimationState        			= FIRING_OR_PREATTACK_A MOVING
			StateName					= Ready_Sword
			
			Animation           		= AttackWithSwordWhileMoving
				AnimationName       	= MUSpidRdr_ATRA
				AnimationMode       	= ONCE
				UseWeaponTiming			= Yes
			End
			BeginScript
				CurDrawableHideSubObject("arrrow")
			EndScript
		End

		AnimationState        			= FIRING_OR_PREATTACK_A
			StateName					= Ready_Sword
			
			Animation           		= AttackWithSwordA
				AnimationName       	= MUSpidRdr_ATKA
				AnimationMode       	= ONCE
				UseWeaponTiming			= Yes
			End
			Animation           		= AttackWithSwordB
				AnimationName       	= MUSpidRdr_ATKC
				AnimationMode       	= ONCE
				UseWeaponTiming			= Yes
			End
			BeginScript
				CurDrawableHideSubObject("arrrow")
			EndScript
		End

;;------------------------- BACKUP --------------------------------------------------------------------


		AnimationState					= MOVING BACKING_UP WEAPONSET_TOGGLE_1
			StateName					= STATE_BackingUp
			Animation					= Bow
				AnimationName			= MUSpidRdr_BAKB
				AnimationMode			= LOOP
			End
			Animation					= WantBow
				AnimationName			= MUSpidRdr_BAKA
				AnimationMode			= LOOP
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				CurDrawableShowSubObject("arrrow")
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				if PrevState == "STATE_BackingUp"
				then
					if PrevAnim == "WantBow" or PrevAnim == "Sword"
					then
						return "WantBow"
					end
				end
				
				return "Bow"
			EndScript
		End
		
		AnimationState					= MOVING BACKING_UP
			StateName					= STATE_BackingUp
			Animation					= Sword
				AnimationName			= MUSpidRdr_BAKA
				AnimationMode			= LOOP
			End
			Animation					= WantSword
				AnimationName			= MUSpidRdr_BAKB
				AnimationMode			= LOOP
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				CurDrawableHideSubObject("arrrow")
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				if PrevState == "STATE_BackingUp"
				then
					if PrevAnim == "Bow" or PrevAnim == "WantSword"
					then
						return "WantSword"
					end
				end
				
				return "Sword"			
			EndScript
		End

		; -------- Turning -----------------;
		
		AnimationState        			= TURN_LEFT_HIGH_SPEED WEAPONSET_TOGGLE_1 
			StateName					= Moving_Bow
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpidRdr_TNLBH
				AnimationMode       	= LOOP
			End
		End

		AnimationState        			= TURN_LEFT_HIGH_SPEED
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpidRdr_TRNLH
				AnimationMode       	= LOOP
			End
		End

		AnimationState        			= TURN_RIGHT_HIGH_SPEED  WEAPONSET_TOGGLE_1  
			StateName					= Moving_Bow
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpidRdr_TNRBH
				AnimationMode       	= LOOP
			End
		End

		AnimationState        			= TURN_RIGHT_HIGH_SPEED
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpidRdr_TRNRH
				AnimationMode       	= LOOP
			End
		End

		AnimationState        			= TURN_LEFT  WEAPONSET_TOGGLE_1 
			StateName					= Moving_Bow
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpidRdr_TNLBH
				AnimationMode       	= LOOP
			End
		End

		AnimationState        			= TURN_LEFT
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpidRdr_TRNLH
				AnimationMode       	= LOOP
			End
		End

		AnimationState        			= TURN_RIGHT WEAPONSET_TOGGLE_1 
			StateName					= Moving_Bow
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpidRdr_TNRBH
				AnimationMode       	= LOOP
			End
		End

		AnimationState        			= TURN_RIGHT
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpidRdr_TRNRH
				AnimationMode       	= LOOP
			End
		End


									
		; ------------ Moving ------------- ;
		
		AnimationState        			= MOVING WEAPONSET_TOGGLE_1
			StateName					= Moving_Bow
			SimilarRestart				= Yes
			Animation           		= run_b
				AnimationName       	= MUSpidRdr_RUND
				AnimationMode       	= LOOP
			End
			Animation					= finishrun_s
				AnimationName       	= MUSpidRdr_RUNC
				AnimationMode       	= ONCE
				AnimationBlendTime		= 0
			End
			Animation					= runtrans_sb
				AnimationName       	= MUSpidRdr_RUNC
				AnimationMode       	= ONCE
				AnimationBlendTime		= 0
			End
			Animation					= runtrans_bs_finish
				AnimationName       	= MUSpidRdr_RUNC
				AnimationMode       	= ONCE
				AnimationBlendTime		= 0
			End
			Animation					= runnoblend_b
				AnimationName       	= MUSpidRdr_RUND
				AnimationMode       	= LOOP
				AnimationBlendTime		= 0
			End
			Flags = MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			
			BeginScript
				CurDrawableShowSubObject("arrrow")
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				
				
				
				Prev = CurDrawablePrevAnimationState()
				if PrevState == "STATE_Climbing"
				then
					CurDrawableSetTransitionAnimState("Trans_ClimbingToRunning")
					return
				elseif PrevState == "STATE_Rappelling"
				then
					CurDrawableSetTransitionAnimState("Trans_RappellingToRunning")
					return
				elseif PrevState == "Moving_Sword"
				then
					if PrevAnim == "runtrans_bs"
					then
						return "runtrans_bs_finish"
					elseif PrevAnim == "finishrun_b"
					then
						return "runnoblend_b"
					else
						return "finishrun_s"
					end
				elseif PrevAnim == "finishrun_s" or PrevAnim == "runtrans_bs_finish" or PrevAnim == "WantBow"
				then
					return "runtrans_sb"
				elseif PrevAnim == "runtrans_sb" or PrevAnim == "run_b" or PrevAnim == "runnoblend_b"
				then
					return "runnoblend_b"
				else
					return "run_b"
				end
			EndScript
		End
		
		AnimationState        			= MOVING
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpidRdr_RUNC
				AnimationMode       	= LOOP
			End
			Animation					= finishrun_b
				AnimationName       	= MUSpidRdr_RUND
				AnimationMode       	= ONCE
				AnimationBlendTime		= 0
			End
			Animation					= runtrans_bs
				AnimationName       	= MUSpidRdr_RUND
				AnimationMode       	= ONCE
				AnimationBlendTime		= 0
			End
			Animation					= runtrans_sb_finish
				AnimationName       	= MUSpidRdr_RUND
				AnimationMode       	= ONCE
				AnimationBlendTime		= 0
			End
			Animation					= runnoblend_s
				AnimationName       	= MUSpidRdr_RUNC
				AnimationMode       	= LOOP
				AnimationBlendTime		= 0
			End
			Flags = MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				
				if PrevState == "Moving_Bow"
				then
					if PrevAnim == "runtrans_sb"
					then
						return "runtrans_sb_finish"
					elseif PrevAnim == "finishrun_s"
					then
						return "runnoblend_s"
					else
						return "finishrun_b"
					end
				elseif PrevAnim == "finishrun_b" or PrevAnim == "runtrans_sb_finish" or PrevAnim == "WantSword"
				then
					return "runtrans_bs"
				elseif PrevAnim == "runtrans_bs" or PrevAnim == "run_s" or PrevAnim == "runnoblend_s"
				then
					return "runnoblend_s"
				else
					return "run_s"
				end				
			EndScript
		End
		
		
;;-----------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<

		AnimationState					= CONTINUOUS_FIRE_MEAN		;;;;;;;;;HACK TO STOP JITTERS
			Animation					= HangFrameWhileCoasting
				AnimationName			= MUSpidRdr_ATKB
				AnimationMode			= LOOP ;MANUAL
				AnimationBlendTime		= 0
			End
			Flags						= START_FRAME_LAST
						
			BeginScript
				CurDrawableShowSubObject("arrrow")
				if CurDrawablePrevAnimationState() == "STATE_Firing" then CurDrawableAllowToContinue() end
			EndScript
			;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
			;;;;
			;;;;	VERY IMPORTANT ARCHER INFORMATION
			;;;;	THIS WILL STOP THE JITTERS, AND BEST
			;;;;	YET, IT'S A COMPLETE HACK! Just look above.
			;;;;	We say that if we get into this state
			;;;;	from firing, just continue to fire. DONE.
			;;;;
			;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		End
		
		AnimationState					= CONTINUOUS_FIRE_SLOW
			StateName					= Ready_Bow
			Animation					= PutAwayArrow
				AnimationName			= MUSpidRdr_ATKB
				AnimationMode			= ONCE
			End
						
			BeginScript
				CurDrawableShowSubObject("arrrow")
			EndScript
		End

;;-----------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<

		AnimationState					= ATTACKING WEAPONSET_TOGGLE_1
			StateName					= Ready_Bow
			
			Animation					= IDLB
				AnimationName			= MUSpidRdr_IDLB
				AnimationMode			= LOOP
			End
			
			BeginScript
				CurDrawableShowSubObject("arrrow")
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				then 
					CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")	
				end				
			EndScript
		End
		
;;;--------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<		
	
		AnimationState					= EMOTION_UNCONTROLLABLY_AFRAID  WEAPONSET_TOGGLE_1
			StateName					= STATE_Emotion_Bow
			Animation					= Bow
				AnimationName			= MUSpidRdr_FERB
				AnimationMode			= ONCE
				AnimationBlendTime		= 15
			End	
			Animation					= Bow2
				AnimationName			= MUSpidRdr_FERB
				AnimationMode			= ONCE
				AnimationBlendTime		= 15
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				end
			EndScript	
		End
			AnimationState					= EMOTION_UNCONTROLLABLY_AFRAID
			StateName					= STATE_Emotion_Sword
			Animation					= Sword
				AnimationName			= MUSpidRdr_FERA
				AnimationMode			= ONCE
			End
			Animation					= Sword2
				AnimationName			= MUSpidRdr_FERB
				AnimationMode			= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				end
			EndScript
		End
	
	
		; -------- Alert ------- ;
		
		AnimationState					= EMOTION_ALERT WEAPONSET_TOGGLE_1
			StateName					= Ready_Bow
			
			Animation					= Alert_1
				AnimationName			= MUSpidRdr_IDLB
				AnimationMode			= LOOP
			End
			
			BeginScript
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				then 
					CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")	
				end	
			EndScript
		End
		AnimationState					= ENGAGED WEAPONSET_TOGGLE_1
			StateName					= Ready_Bow
			
			Animation					= Alert_1
				AnimationName			= MUSpidRdr_IDLB
				AnimationMode			= LOOP
			End
			
			BeginScript
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				then 
					CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")	
				end	
			EndScript
		End
		
		AnimationState					= EMOTION_ALERT
			StateName					= Ready_Sword
			
			Animation					= Alert_1
				AnimationName			= MUSpidRdr_IDLA
				AnimationMode			= LOOP
			End
			
			BeginScript
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")	
				end
			EndScript
		End
		AnimationState					= ENGAGED
			StateName					= Ready_Sword
			
			Animation					= Alert_1
				AnimationName			= MUSpidRdr_IDLA
				AnimationMode			= LOOP
			End
			
			BeginScript
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")	
				end
			EndScript
		End
		
;;------------ EMOTIONS ------------------------------------------------------------------
;;======= AFRAID

		AnimationState					= EMOTION_AFRAID  WEAPONSET_TOGGLE_1
			StateName					= STATE_Emotion_Bow
			Animation					= Bow
				AnimationName			= MUSpidRdr_FERB
				AnimationMode			= ONCE
				AnimationBlendTime		= 15
			End	
			Animation					= Bow2
				AnimationName			= MUSpidRdr_FERB
				AnimationMode			= ONCE
				AnimationBlendTime		= 15
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				end
			EndScript	
		End

		AnimationState					= EMOTION_AFRAID
			StateName					= STATE_Emotion_Sword
			Animation					= Sword
				AnimationName			= MUSpidRdr_FERA
				AnimationMode			= ONCE
			End
			Animation					= Sword2
				AnimationName			= MUSpidRdr_FERA
				AnimationMode			= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				end
			EndScript
		End
		
		AnimationState					= EMOTION_POINTING WEAPONSET_TOGGLE_1
			StateName					= STATE_Emotion_Bow
			Animation					= Bow
				AnimationName			= MUSpidRdr_PNTB
				AnimationMode			= ONCE
			End
			Animation					= Bow2
				AnimationName			= MUSpidRdr_PNTB
				AnimationMode			= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				elseif PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
				end
			EndScript
		End
		
		AnimationState					= EMOTION_POINTING
			StateName					= STATE_Emotion_Sword
			Animation					= Sword
				AnimationName			= MUSpidRdr_PNTA
				AnimationMode			= ONCE
			End
			Animation					= Sword2
				AnimationName			= MUSpidRdr_PNTA
				AnimationMode			= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				elseif PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
				end
			EndScript
		End


		AnimationState					= ATTACKING
			StateName					= Ready_Sword
			
			Animation					= Alert_1
				AnimationName			= MUSpidRdr_IDLA
				AnimationMode			= LOOP
			End
			
			BeginScript
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")	
				end
			EndScript
		End

		; ------ Selected ------ ;

		AnimationState				=	SELECTED  WEAPONSET_TOGGLE_1
			StateName           	=	Selected_Bow
			
			Animation				=	ATNE
				AnimationName		=	MUSpidRdr_ATNF
				AnimationMode		=	LOOP
			End
			
			BeginScript
				CurDrawableShowSubObject("arrrow")
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "STATE_Emotion_Bow" or Prev == "STATE_Emotion_Sword" then CurDrawableAllowToContinue() end
				if Prev == "Bored_Bow" then CurDrawableSetTransitionAnimState("TRANS_BS_Bow")				end
				if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				then 
					CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Selected")	
				end	
			EndScript
		End

		AnimationState					= RAISING_FLAG WEAPONSET_TOGGLE_1
			StateName					= STATE_Emotion_Bow
			Animation					= Bow
				AnimationName			= MUSpidRdr_CHRA
				AnimationMode			= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				elseif PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
				end
			EndScript
		End
		
		AnimationState					= RAISING_FLAG
			StateName					= STATE_Emotion_Sword
			Animation					= Sword
				AnimationName			= MUSpidRdr_CHRB
				AnimationMode			= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				elseif PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
				end
			EndScript
		End

		AnimationState				=	SELECTED
			StateName				=	Selected_Sword
			
			Animation				=	ATNA
				AnimationName		=	MUSpidRdr_ATNB
				AnimationMode		=	LOOP
			End
			
			BeginScript
				CurDrawableHideSubObject("arrrow")
				
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "STATE_Emotion_Bow" or Prev == "STATE_Emotion_Sword" then CurDrawableAllowToContinue() end
				if Prev == "Bored_Sword"		then CurDrawableSetTransitionAnimState("TRANS_BS_Sword")		end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Selected")	
				end
				
			EndScript
		End
	
		
		; --------- Hit Reactions ---------- ;
		
		AnimationState 						= HIT_REACTION HIT_LEVEL_1 WEAPONSET_TOGGLE_1
			StateName						= Bored_Bow
			Animation 						= Hit_Level_1_a
				AnimationName				= MUSpidRdr_HITB
				AnimationMode 				= ONCE
			End
		End
		
		AnimationState						= HIT_REACTION HIT_LEVEL_1
			StateName						= Bored_Sword
			Animation						= Hit_Level_1_a
				AnimationName				= MUSpidRdr_HITA
				AnimationMode				= ONCE
			End
		End

		; --------- TAUNTING ---------- ;
		
		AnimationState					= EMOTION_TAUNTING WEAPONSET_TOGGLE_1
			StateName					= STATE_Emotion_Bow
			Animation					= Bow
				AnimationName			= MUSpidRdr_TNTB
				AnimationMode			= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				elseif PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
				end
			EndScript
		End
		
		AnimationState					= EMOTION_TAUNTING
			StateName					= STATE_Emotion_Sword
			Animation					= Sword
				AnimationName			= MUSpidRdr_TNTA
				AnimationMode			= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				elseif PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
				end
			EndScript
		End
		
		; --------- CELEBRATING ---------- ;
		
		AnimationState					= EMOTION_CELEBRATING WEAPONSET_TOGGLE_1
			StateName					= STATE_Emotion_Bow
			Animation					= Bow
				AnimationName			= MUSpidRdr_CHRA
				AnimationMode			= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				elseif PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
				end
			EndScript
		End
		
		AnimationState					= EMOTION_CELEBRATING
			StateName					= STATE_Emotion_Sword
			Animation					= Sword
				AnimationName			= MUSpidRdr_CHRB
				AnimationMode			= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				elseif PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
				end
			EndScript
		End
		
		
		; ------- Bored -------- ;
		IdleAnimationState
			StateName					= Bored_Sword
			
			Animation           		= Idle_Sword1
				AnimationName       	= MUSpidRdr_IDLA
				AnimationMode       	= ONCE
			End
			Animation           		= Idle_Sword2
				AnimationName       	= MUSpidRdr_IDLA
				AnimationMode       	= ONCE
			End
			Animation           		= Idle_Sword3
				AnimationName       	= MUSpidRdr_IDLA
				AnimationMode       	= ONCE
			End
			Animation					= IdleNoFidget
				AnimationName			= MUSpidRdr_IDLA
				AnimationMode			= ONCE
				AnimationPriority		= 20
			End
			Animation					= IdleNoFidget2
				AnimationName			= MUSpidRdr_IDLA
				AnimationMode			= ONCE
				AnimationPriority		= 0
			End
			Flags						= RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				CurDrawableHideSubObject("arrrow")

				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "TRANS_SB_Sword"		then return "IdleNoFidget" end
				if Prev == "Selected_Sword"		then CurDrawableSetTransitionAnimState("TRANS_SB_Sword")		end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Selected")	
				end
			EndScript
		End
		
		AnimationState					= WEAPONSET_TOGGLE_1
			StateName					= Bored_Bow
			
			Animation					= IdleBowB
				AnimationName			= MUSpidRdr_IDLB
				AnimationMode			= ONCE
			End
			Animation					= IdleBowD
				AnimationName			= MUSpidRdr_IDLB
				AnimationMode			= ONCE
			End
			Animation					= IdleNoFidget
				AnimationName			= MUSpidRdr_IDLB
				AnimationMode			= ONCE
				AnimationPriority		= 20
			End
			Animation					= IdleNoFidget2
				AnimationName			= MUSpidRdr_IDLB
				AnimationMode			= ONCE
				AnimationPriority		= 10
			End
			Flags						= RESTART_ANIM_WHEN_COMPLETE
			BeginScript	
				CurDrawableShowSubObject("arrrow")
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "TRANS_SB_Bow" then return "IdleNoFidget" end
				if Prev == "Selected_Bow"		then CurDrawableSetTransitionAnimState("TRANS_SB_Bow")		end
				if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				then 
					CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Selected")	
				end	
			EndScript
		End

		
		;----------------- Bow Transitions -------------------------;

		TransitionState       			= TRANS_BS_Bow
			Animation           		= ATND
				AnimationName     		= MUSpidRdr_ATNG
				AnimationMode     		= ONCE_BACKWARDS
				AnimationBlendTime		= 10
			End
			Flags						= START_FRAME_LAST
		End
		
		TransitionState       			= TRANS_SB_Bow
			Animation           		= ATND
				AnimationName     		= MUSpidRdr_ATNG
				AnimationMode     		= ONCE
			End
		End
		
		;----------------- Sword Transitions -------------------------;
		
		TransitionState       			= TRANS_BS_Sword
			Animation
				AnimationName     		= MUSpidRdr_ATNC
				AnimationMode     		= ONCE_BACKWARDS
			End
			Flags						= START_FRAME_LAST
		End
		
		TransitionState       			= TRANS_SB_Sword
			Animation           		= ATNA
				AnimationName     		= MUSpidRdr_ATNC
				AnimationMode     		= ONCE
			End
		End

		;-------------- Weapon Change Transitions --------------------------;		

		TransitionState       			= TRANS_BowToSword_Ready
			Animation           		= DrawSwords
				AnimationName       	= MUSpidRdr_TGLB
				AnimationMode       	= ONCE
			End
		End

		TransitionState       			= TRANS_SwordToBow_Ready
			Animation           		= DrawBow
				AnimationName       	= MUSpidRdr_TGLA
				AnimationMode       	= ONCE
			End
		End
		
		TransitionState       			= TRANS_BowToSword_Selected
			Animation           		= DrawSwords
				AnimationName       	= MUSpidRdr_TGLB
				AnimationMode       	= ONCE
			End
		End

		TransitionState       			= TRANS_SwordToBow_Selected
			Animation           		= DrawBow
				AnimationName       	= MUSpidRdr_TGLA
				AnimationMode       	= ONCE
			End
		End
	End
	
    #include "..\..\..\includes\StunDrawModuleMedium.inc"

	; ***DESIGN parameters ***
	Side			= Wild
	IsTrainable		= Yes
	EditorSorting	= UNIT
	ThreatLevel		= 1.0
	ThingClass		= HORDE_UNIT
	CommandPoints	= 10
	
	TransportSlotCount = TRANSPORTSLOTCOUNT_UNIT

	WeaponSet
		Conditions = None 
		Weapon = PRIMARY WildSpiderRiderSword
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	End
		
	WeaponSet
		Conditions = WEAPONSET_TOGGLE_1
		Weapon = PRIMARY WildSpiderRiderBow
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	End
	
	ArmorSet
		Conditions      = None
		Armor           = WildSpiderRiderArmor
		DamageFX        = NormalDamageFX
	End

	ShroudClearingRange = SHROUD_CLEAR_STANDARD       
	VisionRange = WILD_SPIDERRIDER_VISION_RANGE
	
	VisionSide = 35%
	VisionRear = 25%
	
	MaxVisionBonusPercent = 300%
	VisionBonusTestRadius = 200
	VisionBonusPercentPerFoot = 2.0%
	
	DisplayName			= OBJECT:WildSpiderRider
	BountyValue			= WILD_SPIDERRIDER_BOUNTTY_VALUE	
	CrushableLevel		= 1  ;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
	CrusherLevel		= 1
	CrushWeapon			= SpiderRiderCrush

	MinCrushVelocityPercent		= 40 ; Has to be moving at at least 35% of full speed.
	CrushDecelerationPercent	= 20 ; Lose 20 percent of max velocity when crushing.

	CrushKnockback = 40;
	CrushZFactor = 1.0;
	
	CommandSet			= WildSpiderRiderCommandSet	
	
	; *** AUDIO Parameters ***;

	VoiceAttack								= SpiderRiderVoiceAttack
	VoiceAttackCharge						= SpiderRiderVoiceAttackCharge
	VoiceAttackMachine						= SpiderRiderVoiceAttack
	VoiceAttackStructure					= SpiderRiderVoiceAttackBuilding
	VoiceCreated							= EVA:SpiderRidersCreated
	VoiceFullyCreated						= EVA:SpiderRidersCreated
	VoiceGuard								= SpiderRiderVoiceGuard
	VoiceMove								= SpiderRiderVoiceMove
	VoiceMoveOverWalls						= SpiderRiderVoiceMoveWalls
	VoiceMoveToCamp							= SpiderRiderVoiceMoveCamp
	VoiceMoveToHigherGround					= SpiderRiderVoiceMoveHighGround
	VoiceMoveWhileAttacking					= SpiderRiderVoiceDisengage
	VoicePriority							= 45
	VoiceRetreatToCastle					= SpiderRiderVoiceRetreat
	VoiceSelect								= SpiderRiderVoiceSelectMS
	VoiceSelectBattle 						= SpiderRiderVoiceSelectBattleMS

	VoiceEnterStateAttack					= SpiderRiderVoiceEnterStateAttack
	VoiceEnterStateAttackCharge				= SpiderRiderVoiceEnterStateAttackCharge
	VoiceEnterStateAttackMachine			= SpiderRiderVoiceEnterStateAttack
	VoiceEnterStateAttackStructure			= SpiderRiderVoiceEnterStateAttackBuilding
	VoiceEnterStateMove						= SpiderRiderVoiceEnterStateMove
	VoiceEnterStateMoveOverWalls			= SpiderRiderVoiceEnterStateMoveWalls
	VoiceEnterStateMoveToCamp				= SpiderRiderVoiceEnterStateMoveCamp
	VoiceEnterStateMoveToHigherGround		= SpiderRiderVoiceEnterStateMoveHighGround
	VoiceEnterStateMoveWhileAttacking		= SpiderRiderVoiceEnterStateDisengage
	VoiceEnterStateRetreatToCastle			= SpiderRiderVoiceEnterStateRetreat

	SoundAmbient							= WildSpiderRiderAmbientLoopMS
	SoundImpact								= ImpactHorse
	; SoundMoveLoop							= WildSpiderRiderMoveLoop  Sorry, doesn't work on horde members. Use LGAS instead

	UnitSpecificSounds
		VoiceEnterUnitEvilMenTransportShip	= SpiderRiderVoiceMoveShip
		VoiceEnterUnitMordorMumakil			= SpiderRiderVoiceMove
		VoiceEnterUnitSlaughterHouse		= SpiderRiderVoiceMove
		VoiceGarrison						= SpiderRiderVoiceMove
		VoiceInitiateCaptureBuilding		= SpiderRiderVoiceCaptureBuilding
	End

	ClientBehavior = AnimationSoundClientBehavior ModuleTag_AnimAudioBehavior
		MaxUpdateRangeCap = 800
		AnimationSound = Sound:WeaponSwitchToSpearSpiderRiderMS	Animation:MUSpidRdr_SKL.MUSpidRdr_TGLB	Frames:1
		AnimationSound = Sound:WeaponSwitchToBowSpiderRiderMS	Animation:MUSpidRdr_SKL.MUSpidRdr_TGLA	Frames:1
		AnimationSound = Sound:BodyFallOrc						Animation:MUSPIDRDR_SKL.MUSPIDRDR_DIEA	Frames:29
		AnimationSound = Sound:BodyFallOrc						Animation:MUSPIDRDR_SKL.MUSPIDRDR_DIEB	Frames:29 
		AnimationSound = Sound:BodyFallOrc						Animation:MUSPIDRDR_SKL.MUSPIDRDR_DIEC	Frames:25
		AnimationSound = Sound:BodyFallOrc						Animation:MUSPIDRDR_SKL.MUSPIDRDR_DIED	Frames:25
		AnimationSound = Sound:BodyFallOrc						Animation:MUSPIDRDR_SKL.MUSPIDRDR_LNDA	Frames:7
		AnimationSound = Sound:BodyFallOrc						Animation:MUSPIDRDR_SKL.MUSPIDRDR_LNDB	Frames:7
	End

	CrowdResponseKey = Goblin

    #include "..\..\..\includes\StandardUnitEvaEvents.inc"

	ClientBehavior = ModelConditionAudioLoopClientBehavior ModuleTag_foo
		ModelCondition = Required:EMOTION_CELEBRATING	Excluded:DYING ENGAGED	Sound:EmotionGoblinCompilationVoxCheerSinglesLoop	;MOVING ATTACKING 
		ModelCondition = Required:EMOTION_TAUNTING		Excluded:DYING ENGAGED	Sound:EmotionGoblinCompilationVoxTauntSinglesLoop	;MOVING ATTACKING
		;ModelCondition = Required:MOVING Sound:WildSpiderRiderMoveLoop
		ModelCondition = Required:RAISING_FLAG			Excluded:DYING ENGAGED	Sound:EmotionGoblinCompilationVoxTauntSinglesLoop
	End

	Behavior = LargeGroupAudioUpdate ModuleTag_LGAU		;Tie into LargeGroupAudio system
		Key = SpiderRider
	End

	; *** ENGINEERING Parameters ***

  RadarPriority = UNIT
  KindOf = PRELOAD SELECTABLE CAN_CAST_REFLECTIONS CAVALRY SCORE THROWN_OBJECT ARCHER ATTACK_NEEDS_LINE_OF_SIGHT GRAB_AND_DROP  ;PATH_THROUGH_EACH_OTHER 
 
  Body = ActiveBody ModuleTag_02
    MaxHealth         = WILD_SPIDERRIDER_HEALTH
    MaxHealthDamaged  = WILD_SPIDERRIDER_HEALTH_DAMAGED
	BurningDeathBehavior = Yes
	BurningDeathFX       = FX_CavalryBurningFlame
  End
 
	;-------------------------Units Upgrades-------------------
	; Fire arrow upgrade
	Behavior = WeaponSetUpgrade Weapon_Upgrade1
		TriggeredBy = Upgrade_WildFireArrows
	End
	
	; Switch arrows being displayed.
	Behavior = SubObjectsUpgrade Weapon_UpgradeSwap1
		TriggeredBy		= Upgrade_WildFireArrows
		ShowSubObjects	= FireArowTip ArrowNock
	End	
	
	Behavior = WeaponSetUpgrade Weapon_Upgrade2
		TriggeredBy = Upgrade_WildForgedBlades
	End

	Behavior = SubObjectsUpgrade ForgedBlades_Upgrade
		TriggeredBy		= Upgrade_WildForgedBlades
		ShowSubObjects	= Forged_Blade
	End
		
// 	Behavior = EmotionTrackerUpdate	Module_EmotionTracker
//		TauntAndPointDistance		=	INFANTRY_TAUNT_POINT_RADIUS		; max distance to taunted/pointed objet
//		TauntAndPointUpdateDelay	=	1000	; how often scan (milliseconds)
//		TauntAndPointExcluded		=	NONE
//		AfraidOf					=	EMOTION_AFRAIDOF_OBJECTFILTER
//		AlwaysAfraidOf				=	EMOTION_ALWAYS_AFRAIDOF_OBJECTFILTER +CloudBreakSunbeam +SunflareSunbeam
//		PointAt						=	EMOTION_POINTAT_OBJECTFILTER
//		HeroScanDistance			=	150
//		FearScanDistance			=	ARCHER_FEAR_SCAN_RADIUS ;250
//
//		AddEmotion	=	Terror_Base
//		AddEmotion	=	Doom_Base
//		AddEmotion	=   BraceForBeingCrushed_Base
//		AddEmotion	=	UncontrollableFear_Base_Evil
//		AddEmotion	=	FearIdle_Base
//		AddEmotion	=	FearBusy_Base
//		AddEmotion	=	Point_Base
//		AddEmotion	=	Taunt_Base	
//		AddEmotion	=	CheerIdle_Base
//		AddEmotion	=	CheerBusy_Base
//		AddEmotion	=	HeroCheerIdle_Base
//		AddEmotion	=	HeroCheerBusy_Base
//		AddEmotion	=	Alert_Base
//	End	


  Behavior = AIUpdateInterface ModuleTag_03
    AutoAcquireEnemiesWhenIdle	=	Yes ATTACK_BUILDINGS
    MoodAttackCheckRate			=	500
	AILuaEventsList				=	WildSpiderFunctions
    AttackPriority				= 	AttackPriority_Cavalry
	BurningDeathTime			=	BURNINGDEATH_DURATION_CAVALRY
  End

	LocomotorSet
		Locomotor = NormalHorseHordeMemberLocomotor
		Condition = SET_NORMAL 
		Speed     = NORMAL_WILD_CAVALRY_MEMBER_SPEED
	End

	LocomotorSet
		Locomotor = NormalHorseHordeMemberLocomotor
		Condition = SET_COMBO
		Speed     = NORMAL_WILD_CAVALRY_MEMBER_SPEED
	End

	LocomotorSet
		Locomotor = BurningDeathLocomotorCavalry
		Condition = SET_BURNINGDEATH
		Speed	  = BURNINGDEATH_WANDERSPEED_CAVALRY
	End


  Behavior = PhysicsBehavior ModuleTag_04
    GravityMult				= 1.0
    ShockStunnedTimeLow		= 800	;msec
    ShockStunnedTimeHigh	= 1000	;msec
    ShockStandingTime		= 2133	;msec
  End
 
  Behavior = SlowDeathBehavior ModuleTag_05
    DeathTypes			= ALL -KNOCKBACK
    SinkDelay			= 3000
    SinkRate			= 4.0     ; in Dist/Sec
    DestructionDelay	= 8000
    Sound				= INITIAL SpiderRiderDieMS
  End

	Behavior = SquishCollide ModuleTag_06
		;nothing
	End

  Behavior = BezierProjectileBehavior ModuleTag_08 ; Module starts asleep, and wakes up when thrown.
    ; 
    FirstHeight					= 24	; Height of Bezier control points above highest intervening terrain
    SecondHeight				= 24
    FirstPercentIndent			= 30%	; Percentage of shot distance control points are placed
    SecondPercentIndent			= 70%
    TumbleRandomly				= Yes

    CrushStyle					= Yes	; I don't detonate, I just hit
    DieOnImpact					= Yes
    BounceCount					= 1		; When I hit the ground, I'll arc again
    BounceDistance				= 40	; this far
    BounceFirstHeight			= 24	; Height of Bezier control points above highest intervening terrain
    BounceSecondHeight			= 24
    BounceFirstPercentIndent	= 20%	; Percentage of shot distance control points are placed
    BounceSecondPercentIndent	= 80%

    GroundHitFX       = FX_ThrownRockGroundHit
    GroundBounceFX    = FX_ThrownRockBounceHit
  End	
  
	;-----------------

    
  Geometry				= CYLINDER
  GeometryMajorRadius	= 8.0
  GeometryMinorRadius	= 8.0CA
  GeometryHeight		= 19.2
  GeometryIsSmall		= Yes
  
;  Shadow				= SHADOW_VOLUME_OR_DECAL
  Shadow				= SHADOW_VOLUME
  ShadowSizeX			= 40;
  ShadowSizeY			= 40;
  ShadowTexture			= ShadowI;
End

