<?xml version="1.0" encoding="utf-8"?>
<AssetDeclaration xmlns="uri:ea.com:eala:asset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xai="uri:ea.com:eala:asset:instance">
	<Tags>
</Tags>
	<Includes>
		<Include type="all" source="DATA:GlobalData/GlobalDefines.xml" />

		<Include
			type="instance"
			source="ART:EXTireTrack2.xml" />
    <Include
			type="all"
			source="ART:AUHarvester_D.xml" />
		<Include
			type="all"
			source="ART:AUHarvester_FX.w3x" />
		<Include
			type="all"
			source="ART:AUHarvester_FP.w3x" />
		<Include
			type="all"
			source="ART:AUHarvester_SKN.w3x" />
		<Include
			type="instance"
			source="ART:EX_Headlights.w3x" />
		<Include
			type="all"
			source="ART:AUHarvester_IDLA.w3x" />
		<Include
			type="all"
			source="ART:AUHarvester_MOVA.w3x" />
		<Include
			type="all"
			source="ART:AUHarvester_HOVER.w3x" />
		<Include
			type="all"
			source="ART:Ore_Gold_SKN.w3x" />
		<Include
			type="all"
			source="ART:Ore_Gold_AHFILL.w3x" />
		<Include
			type="all"
			source="ART:Ore_Gold_AHIDL.w3x" />
						
		<!-- Base Object -->
		<Include
			type="instance"
			source="DATA:BaseObjects/BaseMiner.xml" />
	</Includes>
	<GameObject
		id="AlliedMiner"
		inheritFrom="BaseMiner"
		SelectPortrait="Portrait_AlliedHarvester"
		ButtonImage="Button_AlliedHarvester_on"
		Side="Allies"
		SubGroupPriority="825"
		EditorSorting="UNIT"
		BuildTime="20"
		CommandSet="AlliedMinerCommandSet"
		KindOf="SELECTABLE CAN_CAST_REFLECTIONS SCORE AMPHIBIOUS VEHICLE T2_UNIT HARVESTER MOVE_FOR_NOONE IGNORES_SELECT_ALL CAN_BE_FAVORITE_UNIT EXPANSION_UNIT UNPACKS_INTO_BUILDING CYCLE_SELECTION SKIRMISH_AI_CAN_BUILD_DURING_EMERGENCY_NO_INCOME"
		ThreatLevel="10"
		WeaponCategory="GUN"
		VoicePriority="24"
		EditorName="AlliedMiner"
		Description="Desc:AlliedMiner"
		TypeDescription="Type:AlliedMiner"
		UnitIntro="Allied_Prospector_UnitIntro">
		<DisplayName
			xai:joinAction="Replace">Name:AlliedMiner</DisplayName>
		<ObjectResourceInfo xai:joinAction="Replace">
			<BuildCost Account="=$ACCOUNT_ORE" Amount="1000"/>
		</ObjectResourceInfo>
		<ArmorSet
			Armor="AlliedMinerArmor"
			DamageFX="VehicleDamageFX" />
		<LocomotorSet
			Locomotor="TestReactiveLocomotorTANK"
			Condition="NORMAL"
			Speed="50.0" />
		<LocomotorSet
			Locomotor="AlliedMinerWaterLocomotor"
			Condition="NORMAL"
			Speed="50.0" />
		<SkirmishAIInformation
				BlockIfUnpackTargetBuildingCannotBeRebuilt="false" />
		<Draws>
			<TruckDraw
				id="ModuleTag_Draw"
				OkToChangeModelColor="true"
				TrackMarks="EXTireTrack2"
				TrackMarksOnlyWhenCorneringQuickly="false"
				TrackMarksLeftBone="Bone_Tire_L_03"
				TrackMarksRightBone="Bone_Tire_R_03"

				LeftFrontTireBone="Bone_Tire_Left_Front"
				RightFrontTireBone="Bone_Tire_Right_Front"

				MidLeftMidTireBone="Bone_Tire_Left_Front_2"
				MidRightMidTireBone="Bone_Tire_Right_Front_2"

				MidLeftRearTireBone="Bone_Tire_Left_Middle_01"
				MidRightRearTireBone="Bone_Tire_Right_Middle_01"

				LeftRearTireBone2="Bone_Tire_Left_Middle_02"
				RightRearTireBone2="Bone_Tire_Right_Middle_02"

				LeftRearTireBone="Bone_Tire_Left_Rear"
				RightRearTireBone="Bone_Tire_Right_Rear"

				TireRotationMultiplier="0.2"
				PowerslideRotationAddition="1.25">
				<TreadTerrainParticles>AmphibiousTankTerrainParticleMapping</TreadTerrainParticles>

				<ModelConditionState
					ParseCondStateType="PARSE_DEFAULT"
					RetainSubObjects="true">
					<Model
						Name="AUHarvester_SKN" />
				</ModelConditionState>
        <ModelConditionState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="FORMATION_PREVIEW">
					<Model
						Name="AUHarvester_FP" />
				</ModelConditionState>

				<AnimationState
					ParseCondStateType="PARSE_DEFAULT">
					<Animation
						AnimationName="AUHarvester_IDLA"
						AnimationMode="LOOP" />
				</AnimationState>

				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="OVER_WATER">
					<Animation
						AnimationName="AUHarvester_IDLA"
						AnimationMode="LOOP" />
				</AnimationState>

				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="HARVEST_ACTION">
					<Animation
						AnimationName="AUHarvester_IDLA"
						AnimationMode="LOOP" />
				</AnimationState>

				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="MOVING TURN_LEFT">
					<Animation
						AnimationName="AUHarvester_MOVA"
						AnimationMode="LOOP" />	
				</AnimationState>

				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="MOVING TURN_RIGHT">
					<Animation
						AnimationName="AUHarvester_MOVA"
						AnimationMode="LOOP" />	
				</AnimationState>

				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="MOVING">
					<Animation
						AnimationName="AUHarvester_MOVA"
						AnimationMode="LOOP" />
				</AnimationState>
			</TruckDraw>
			
<!-- Draw Ore -->
			
			<ScriptedModelDraw
				id="ModuleTag_Draw_Ore"
				OkToChangeModelColor="true">
				<ModelConditionState
					ParseCondStateType="PARSE_DEFAULT">
					<Model
						Name="Ore_Gold_SKN" />
				</ModelConditionState>
				<AnimationState
					ParseCondStateType="PARSE_DEFAULT"
					StateName="STATE_Empty"
					Flags="START_FRAME_FIRST">
					<Animation
						AnimationName="Ore_Gold_AHFILL"
						AnimationMode="ONCE_BACKWARDS"
						AnimationBlendTime="0" />
					<Script>
						Prev = CurDrawablePrevAnimationState();
						if Prev == "STATE_Unload" then
						CurDrawableSetTransitionAnimState("TRANS_Unload")
						end
					</Script>							
				</AnimationState>
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="DOCKING_ACTIVE"
					StateName="STATE_Empty"
					Flags="START_FRAME_FIRST">
					<Animation
						AnimationName="Ore_Gold_AHFILL"
						AnimationMode="ONCE_BACKWARDS"
						AnimationBlendTime="0" />
				</AnimationState>											
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="MONEY_STORED_AMOUNT_4"
					StateName="STATE_Unload">
					<Animation
						AnimationName="Ore_Gold_AHIDL"
						AnimationMode="LOOP"
						AnimationBlendTime="0" />
				</AnimationState>
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="MONEY_STORED_AMOUNT_3"
					StateName="STATE_Unload">
					<Animation
						AnimationName="Ore_Gold_AHIDL"
						AnimationMode="LOOP"
						AnimationBlendTime="0" />
				</AnimationState>	
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="MONEY_STORED_AMOUNT_2"
					StateName="STATE_Unload">
					<Animation
						AnimationName="Ore_Gold_AHIDL"
						AnimationMode="LOOP"
						AnimationBlendTime="0" />
				</AnimationState>
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="MONEY_STORED_AMOUNT_1"
					StateName="STATE_Unload">
					<Animation
						AnimationName="Ore_Gold_AHIDL"
						AnimationMode="LOOP"
						AnimationBlendTime="0" />
					<Script>
						Prev = CurDrawablePrevAnimationState();
						if Prev == "STATE_Empty" then
						CurDrawableSetTransitionAnimState("TRANS_Fill")
						end
					</Script>							
				</AnimationState>											
				<AnimationState
					ParseCondStateType="PARSE_TRANSITION"
					StateName="TRANS_Fill">
					<Animation
						AnimationName="Ore_Gold_AHFILL"
						AnimationMode="ONCE"
						AnimationBlendTime="0" />
				</AnimationState>				
				<AnimationState
					ParseCondStateType="PARSE_TRANSITION"
					StateName="TRANS_Unload"
					Flags="START_FRAME_LAST">
					<Animation
						AnimationName="Ore_Gold_AHFILL"
						AnimationMode="ONCE_BACKWARDS"
						AnimationBlendTime="0" />
				</AnimationState>
			</ScriptedModelDraw>
			
      <!-- include Headlight draw module. -->
      <xi:include
				href="DATA:Includes/HeadlightDraw3.xml"
				xpointer="xmlns(n=uri:ea.com:eala:asset) xpointer(/n:HeadlightDraw3/child::*)" />

      <!-- DRAW PARTICLES -->

      <ScriptedModelDraw
				id="ModuleTag_Draw_particles"
				OkToChangeModelColor="true">
        <ModelConditionState
					ParseCondStateType="PARSE_DEFAULT">
          <Model
						Name="AUHarvester_FX" />
        </ModelConditionState>
        <ModelConditionState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="DAMAGED">
          <Model
						Name="AUHarvester_FX" />
          <ParticleSysBone
						BoneName="FX_BONE01"
						FXParticleSystemTemplate="VehicleDamageSmoke"
						FollowBone="true" />
        </ModelConditionState>
        <ModelConditionState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="REALLYDAMAGED">
          <Model
						Name="AUHarvester_FX" />
          <ParticleSysBone
						BoneName="FX_BONE01"
						FXParticleSystemTemplate="VehicleDamageSmoke"
						FollowBone="true" />
          <ParticleSysBone
						BoneName="FX_BONE01"
						FXParticleSystemTemplate="VehicleDamageFire"
						FollowBone="true" />
          <ParticleSysBone
						BoneName="FX_BONE01"
						FXParticleSystemTemplate="VehicleDamageFire02"
						FollowBone="true" />
				</ModelConditionState>

			</ScriptedModelDraw>	


<!-- Draw Hover -->
			<ScriptedModelDraw
				id="ModuleTag_Draw_Hover">
				<ModelConditionState
					ParseCondStateType="PARSE_DEFAULT">
					<Model
						Name="AUHarvester_Hover" />
				</ModelConditionState>
				<ModelConditionState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="COMING_OUT_OF_FACTORY">
					<Model
						Name="" />
				</ModelConditionState>					
				<ModelConditionState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="OVER_WATER">
					<Model
						Name="AUHarvester_Hover" />
				</ModelConditionState>				
				<AnimationState
					ParseCondStateType="PARSE_DEFAULT"
					StateName="STATE_Land"
					Flags="START_FRAME_LAST">
					<Animation
						AnimationName="AUHarvester_Hover"
						AnimationMode="ONCE" />					
					<Script>
						Prev = CurDrawablePrevAnimationState()
						if Prev == "STATE_Water" then
						CurDrawableSetTransitionAnimState("TRANS_Land")
						end
					</Script>						
				</AnimationState>

				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="COMING_OUT_OF_FACTORY"
					StateName="STATE_Land">
					<Animation
						AnimationName="AUHarvester_Hover"
						AnimationMode="ONCE" />
				</AnimationState>
								
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="OVER_WATER"
					StateName="STATE_Water"
					Flags="START_FRAME_FIRST">
					<Animation
						AnimationName="AUHarvester_Hover"
						AnimationMode="ONCE_BACKWARDS" />
					<Script>
						Prev = CurDrawablePrevAnimationState()
						if Prev == "STATE_Land" then
						CurDrawableSetTransitionAnimState("TRANS_Water")
						end
					</Script>						
						<ParticleSysBone
						BoneName="None"
						FXParticleSystemTemplate="StingrayWaterWake"
						FollowBone="false" />
				</AnimationState>
				<AnimationState
					ParseCondStateType="PARSE_TRANSITION"
					StateName="TRANS_Water"
					Flags="START_FRAME_LAST">
					<Animation
						AnimationName="AUHarvester_Hover"
						AnimationMode="ONCE_BACKWARDS">
					</Animation>
					<Script>
						CurDrawablePlaySound("ALL_Prospector_WaterSplashMS")
					</Script>     
							</AnimationState>
							<AnimationState
								ParseCondStateType="PARSE_TRANSITION"
								StateName="TRANS_Land"
								Flags="START_FRAME_FIRST">
								<Animation
									AnimationName="AUHarvester_Hover"
									AnimationMode="ONCE">
					</Animation>
					<Script>
						CurDrawablePlaySound("AmphibiousWaterUnitToLand_ScrapeTreadsOut")
					</Script>    
				</AnimationState>												
			</ScriptedModelDraw>
					
		</Draws>
		<Behaviors>
			<Physics
				id="ModuleTag_Physics" />
			<CreateObjectDie
				id="ModuleTag_CreateObjectDie"
				CreationList="AUMiner_Die_OCL">
				<DieMuxData
					DeathTypes="ALL" />
			</CreateObjectDie>
			<DestroyDie
				id="ModuleTag_Die">
				<DieMuxData
					DeathTypes="ALL" />
			</DestroyDie>
			<FXListBehavior
				id="ModuleTag_FXList">
				<DieMuxData
					DeathTypes="ALL" />
				<Event
					Index="onDeath"
					FX="FX_ALL_ProspectorDie" />
				<Event
					Index="onDeath"
					FX="FX_LargeBuildingDieExplosionRumble" />
			</FXListBehavior>

			<xi:include
				href="DATA:Includes/GenericUnpackPower.xml" />

			<ReplaceSelfSpecialAbility
				id="ModuleTag_ReplaceSelf"
				SpecialPowerTemplate="SpecialPower_UnpackReplaceSelf"
				Options="IGNORE_FACING_CHECK USE_OBJECT_GEOMETRY_FOR_WITHIN_RANGE_CHECK FAIL_WITH_INVALID_APPROACH"
				PackTime="3.0s"
				StartAbilityRange="2.0"
				ReplaceOptions="CHECK_BUILD_ASSISTANT DISABLE_DURING_REPLACE CLEAR_LOCATION">
				<ReplacementTemplate>AlliedOutpost</ReplacementTemplate>
			</ReplaceSelfSpecialAbility>
			
			<!-- No stances because there's no weapon -->
			<StancesBehavior
					  id="ModuleTag_Stance"
					  xai:joinAction="Remove" />
		</Behaviors>
		<!-- AI is implemented in BaseMiner class, so none are needed here
			<AI>
				<AIUpdate
				  id="ModuleTag_AI"
				  AutoAcquireEnemiesWhenIdle="NO"></AIUpdate>
			</AI>
		-->
		
		<Body>
			<ActiveBody
				id="ModuleTag_Body"
				MaxHealth="500" />
		</Body>
		<ClientBehaviors>
			<ModelConditionAudioLoopClientBehavior id="ModuleTag_MoveLoopWater">
				<ModelConditionSound Sound="Ship_Small_MoveLoopWater" RequiredFlags="MOVING OVER_WATER" ExcludedFlags="DYING" />
			</ModelConditionAudioLoopClientBehavior>
			<ModelConditionAudioLoopClientBehavior id="ModuleTag_ShrunkenVoice">
				<ModelConditionSound Sound="ALL_Prospector_VoiceShrunken" RequiredFlags="SHRINK_EFFECT" />
			</ModelConditionAudioLoopClientBehavior>
			<ModelConditionSoundSelectorClientBehavior id="ModuleTag_WaterMoveStart">
				<Override RequiredFlags="OVER_WATER">
					<AudioArraySound>
						<AudioEntry Sound="ALL_OreCollector_MoveStartWater" AudioType="soundMoveStart" />
						<AudioEntry Sound="" AudioType="soundMoveLoop" />
					</AudioArraySound>
				</Override>
			</ModelConditionSoundSelectorClientBehavior>
		</ClientBehaviors>
				<Geometry
			IsSmall="false">
			<Shape
				Type="BOX"
				MajorRadius="20.0"
				MinorRadius="10.0"
				Height="15.0"
				ContactPointGeneration="VEHICLE" />
		</Geometry>
		<AudioArrayVoice>
			<AudioEntry Sound="ALL_Prospector_VoiceCreate" AudioType="voiceCreated" />
			<AudioEntry Sound="ALL_Prospector_VoiceMove" AudioType="voiceMove" />
			<AudioEntry Sound="ALL_Prospector_VoiceMoveOreNode" AudioType="voiceSupply" />
			<AudioEntry Sound="ALL_Prospector_VoiceMoveRefinery" AudioType="voiceDock" />
			<AudioEntry Sound="ALL_Prospector_VoiceMoveToLand" AudioType="voiceMoveWaterToLand" />
			<AudioEntry Sound="ALL_Prospector_VoiceMoveToWater" AudioType="voiceMoveLandToWater" />
			<AudioEntry Sound="ALL_Prospector_VoiceRetreat" AudioType="voiceRetreatToCastle" />
			<AudioEntry Sound="ALL_Prospector_VoiceSelectMS" AudioType="voiceSelect" />
			<AudioEntry Sound="ALL_Prospector_VoiceSelectUnderFireMS" AudioType="voiceSelectUnderFire" /> 
			<NamedEntry Sound="ALL_Prospector_VoiceMove" Name="VoiceDeploy" />
		</AudioArrayVoice>
		<AudioArraySound>
			<AudioEntry
				Sound="ALL_OreCollector_MoveStart"
				AudioType="soundMoveStart" />
<!--
			<AudioEntry
				Sound="HarvesterAmbientLoopMS"
				AudioType="soundAmbient" />
-->
		</AudioArraySound>

		<EvaEventArray>
			<EvaEntry EvaEvent="StructurePlacementFailed" EvaType="placementFailed" />
		</EvaEventArray>
		
		<VisionInfo
			VisionRange="200"
			ShroudClearingRange="=$STANDARD_SHROUD_CLEAR" />
		<CrusherInfo
				id="id_CrusherInfo"
				CrusherLevel="20"
				CrushableLevel="20"
				CrushDecelerationPercent="80%">
		<ExtraCrushLevels CrusherLevel="1" CrushableLevel="20" ModelConditionMatch="OVER_WATER"/>	
		 </CrusherInfo>
	</GameObject>
	
	
	
	<GameObject
		id="AlliedMiner_Naval"
		inheritFrom="AlliedMiner"
		EditorName="AlliedMiner_Naval"
		ProductionQueueType="WATERCRAFT">
		<EquivalentTo>AlliedMiner</EquivalentTo>
	</GameObject>
</AssetDeclaration>
