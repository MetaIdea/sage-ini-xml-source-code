<?xml version="1.0" encoding="utf-8"?>
<AssetDeclaration xmlns="uri:ea.com:eala:asset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xai="uri:ea.com:eala:asset:instance">
	<Tags></Tags>
	<Includes>
		<Include type="all" source="DATA:GlobalData/GlobalDefines.xml" /> 

		<Include
			type="all"
			source="ART:SUHarvester_D.xml" />		
		<Include
			type="all"
			source="ART:SUHarvester_SKN.w3x" />
		<Include
			type="all"
			source="ART:SUHarvester_FX.w3x" />
		<Include
			type="all"
			source="ART:FX_SUHarvester.w3x" />
		<Include
			type="all"
			source="ART:SUHarvester_IDLA.w3x" />
		<Include
			type="all"
			source="ART:SUHarvester_WIDL.w3x" />
		<Include
			type="all"
			source="ART:SUHarvester_WMOV.w3x" />
		<Include
			type="all"
			source="ART:SUHarvester_WTRA.w3x" />
		<Include
			type="all"
			source="ART:SUHarvester_MOVA.w3x" />
		<Include
			type="all"
			source="ART:SUHarvester_Armor.w3x" />			
		<Include
			type="all"
			source="ART:Ore_Gold_SKN.w3x" />
		<Include
			type="all"
			source="ART:Ore_Gold_SHFILL.w3x" />
		<Include
			type="all"
			source="ART:Ore_Gold_SHIDL.w3x" />		
    <Include
			type="instance"
			source="ART:EX_Headlights.w3x" />

		<!-- Base Object -->
		<Include
			type="instance"
			source="DATA:BaseObjects/BaseMiner.xml" />
	</Includes>
	<GameObject
		id="SovietMiner"
		inheritFrom="BaseMiner"
		SelectPortrait="Portrait_SovietHarvester_big"
		ButtonImage="Button_SovietHarvester_small"
		Side="Soviet"
		SubGroupPriority="540"
		EditorSorting="UNIT"	
		BuildTime="20"
		CommandSet="SovietMinerCommandSet"
		KindOf="SELECTABLE CAN_CAST_REFLECTIONS SCORE AMPHIBIOUS VEHICLE HARVESTER MOVE_FOR_NOONE IGNORES_SELECT_ALL CAN_BE_FAVORITE_UNIT CYCLE_SELECTION SKIRMISH_AI_CAN_BUILD_DURING_EMERGENCY_NO_INCOME T2_UNIT"
		ThreatLevel="10"
		WeaponCategory="GUN"
		VoicePriority="24"
		JustBuiltTime="3.0s"
		EditorName="SovietMiner"
		Description="Desc:SovietMiner"
		TypeDescription="Type:SovietMiner"
		HealthBoxHeightOffset="15"
		UnitIntro="Soviet_OreCollector_UnitIntro">
		<DisplayName
			xai:joinAction="Replace">Name:SovietMiner</DisplayName>
		<ObjectResourceInfo>
			<BuildCost Account="=$ACCOUNT_ORE" Amount="1400"/>
		</ObjectResourceInfo>
		<ArmorSet
			Armor="SovietMinerArmor"
			DamageFX="VehicleDamageFX" />
		<LocomotorSet
			Locomotor="TestReactiveLocomotorTANK"
			Condition="NORMAL"
			Speed="50.0" />
		<LocomotorSet
			Locomotor="SovietMinerWaterLocomotor"
			Condition="NORMAL"
			Speed="50.0" />			
		<Draws>
			<TruckDraw
				id="ModuleTag_Draw"
				OkToChangeModelColor="true"
				TrackMarks="EXTnkTrack"
				TrackMarksOnlyWhenCorneringQuickly="false"
				TrackMarksLeftBone="Bone_Tire_L_03"
				TrackMarksRightBone="Bone_Tire_R_03"
				LeftFrontTireBone="Bone_Tire_L_01"
				RightFrontTireBone="Bone_Tire_R_01"
				MidLeftRearTireBone="Bone_Tire_L_02"
				MidRightRearTireBone="Bone_Tire_R_02"
				LeftRearTireBone="Bone_Tire_L_03"
				RightRearTireBone="Bone_Tire_R_03"
				TireRotationMultiplier="0.2"
				PowerslideRotationAddition="1.25"
				InitialRecoilSpeed="0.1"
				MaxRecoilDistance="0.1"
				RecoilDamping="2.0"
				RecoilSettleSpeed="3.0" >
				<TreadTerrainParticles>AmphibiousTankTerrainParticleMapping</TreadTerrainParticles>
				
				<ModelConditionState
					ParseCondStateType="PARSE_DEFAULT">
					<Model
						Name="SUHarvester_SKN" />
				</ModelConditionState>

				<ModelConditionState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="DYING">
					<Model
						Name="SUHarvester_SKN" />
					<ParticleSysBone
						BoneName="ROOTTRANSFORM"
						FXParticleSystemTemplate="alliedbomberdyingfire"
						FollowBone="true" />
					<ParticleSysBone
						BoneName="ROOTTRANSFORM"
						FXParticleSystemTemplate="alliedbomberdyingSmoke"
						FollowBone="true" />
					<ParticleSysBone
						BoneName="ROOTTRANSFORM"
						FXParticleSystemTemplate="alliedbomberdyingfirelight"
						FollowBone="true" />
				</ModelConditionState>
				<ModelConditionState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="DAMAGED">
					<Model
						Name="SUHarvester_SKN" />
					<Texture
						Original="SUHarvester"
						New="SUHarvester_D" />
					<ParticleSysBone
						BoneName="Bone_Tire_R_03"
						FXParticleSystemTemplate="VehicleDamageSmoke"
						FollowBone="true" />
				</ModelConditionState>
				<ModelConditionState
					ParseCondStateType="PARSE_NORMAL"
					RetainSubObjects="true"
					ConditionsYes="REALLYDAMAGED">
					<Model
						Name="SUHarvester_SKN" />
					<Texture
						Original="SUHarvester"
						New="SUHarvester_D" />
					<ParticleSysBone
           				BoneName="Bone_Tire_R_03"
           				FXParticleSystemTemplate="VehicleDamageSmoke"
           				FollowBone="true" />
					<ParticleSysBone
						BoneName="Bone_Tire_R_03"
						FXParticleSystemTemplate="VehicleDamageFire"
						FollowBone="true" />
					<ParticleSysBone
						BoneName="Bone_Tire_R_03"
						FXParticleSystemTemplate="VehicleDamageFire02"
						FollowBone="true" />
				</ModelConditionState>

				<ModelConditionState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="FORMATION_PREVIEW">
					<Model
						Name="SUHarvester_SKN" />
				</ModelConditionState>

				<AnimationState
					ParseCondStateType="PARSE_DEFAULT"
					StateName="STATE_OnLAND">
					<Animation
						AnimationName="SUHarvester_IDLA"
						AnimationMode="LOOP"
						AnimationBlendTime="15" />
					<Script>
						Prev = CurDrawablePrevAnimationState()
						if Prev == "STATE_OnWater" and Prev ~= "TRANS_toLand" then CurDrawableSetTransitionAnimState("TRANS_toLand")	end
					</Script>
				</AnimationState>
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="JUST_BUILT"
					StateName="STATE_built">
					<Animation
						AnimationName="SUHarvester_IDLA"
						AnimationMode="ONCE" />
				</AnimationState>

				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="MOVING OVER_WATER"
					StateName="STATE_OnWater">
					<Animation
						AnimationName="SUHarvester_WMOV"
						AnimationMode="LOOP"
						AnimationBlendTime="15" />
					<Script>
						Prev = CurDrawablePrevAnimationState()
						if Prev == "STATE_OnLAND" and Prev ~= "TRANS_" then CurDrawableSetTransitionAnimState("TRANS_toWater")	end
					</Script>
						<ParticleSysBone
						BoneName="None"
						FXParticleSystemTemplate="StingrayWaterWake"
						FollowBone="false" />
				</AnimationState>

				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="MOVING"
					StateName="STATE_OnLAND">
					<Animation
						AnimationName="SUHarvester_MOVA"
						AnimationMode="LOOP" />
					<Script>
						Prev = CurDrawablePrevAnimationState()
						if Prev == "STATE_OnWater" and Prev ~= "TRANS_toLand" then CurDrawableSetTransitionAnimState("TRANS_toLand")	end
					</Script>
				</AnimationState>

				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="OVER_WATER"
					StateName="STATE_OnWater">
					<Animation
						AnimationName="SUHarvester_WIDL"
						AnimationMode="LOOP"
						AnimationBlendTime="15" />
					<Script>
						Prev = CurDrawablePrevAnimationState()
						if Prev == "STATE_OnLAND" and Prev ~= "TRANS_toWater" then CurDrawableSetTransitionAnimState("TRANS_toWater")	end
					</Script>
				</AnimationState>
				<AnimationState
					ParseCondStateType="PARSE_TRANSITION"
					StateName="TRANS_toWater">
					<Animation
						AnimationName="SUHarvester_WTRA"
						AnimationMode="ONCE"/>
						<Script>
							CurDrawablePlaySound("SOV_Miner_WaterSplashMS")
						</Script>    
				</AnimationState>
				<AnimationState
					ParseCondStateType="PARSE_TRANSITION"
					Flags="START_FRAME_LAST"
					StateName="TRANS_toLand">
					<Animation
						AnimationName="SUHarvester_WTRA"
						AnimationMode="ONCE_BACKWARDS" />
					<Script>
						CurDrawablePlaySound("AmphibiousWaterUnitToLand_ScrapeTreadsOut")
					</Script>    
				</AnimationState>
			</TruckDraw>
			
<!-- Draw Ore -->
			
			<ScriptedModelDraw
				id="ModuleTag_Draw_Ore"
				OkToChangeModelColor="true">
				<ModelConditionState
					ParseCondStateType="PARSE_DEFAULT">
					<Model
						Name="Ore_Gold_SKN" />
				</ModelConditionState>
				<AnimationState
					ParseCondStateType="PARSE_DEFAULT"
					StateName="STATE_Empty"
					Flags="START_FRAME_FIRST">
					<Animation
						AnimationName="Ore_Gold_SHFILL"
						AnimationMode="ONCE_BACKWARDS"
						AnimationBlendTime="0" />
					<Script>
						Prev = CurDrawablePrevAnimationState();
						if Prev == "STATE_Unload" then
						CurDrawableSetTransitionAnimState("TRANS_Unload")
						end
					</Script>							
				</AnimationState>
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="DOCKING_ACTIVE"
					StateName="STATE_Empty"
					Flags="START_FRAME_FIRST">
					<Animation
						AnimationName="Ore_Gold_AHFILL"
						AnimationMode="ONCE_BACKWARDS"
						AnimationBlendTime="0" />
				</AnimationState>											
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="MONEY_STORED_AMOUNT_4"
					StateName="STATE_Unload">
					<Animation
						AnimationName="Ore_Gold_SHIDL"
						AnimationMode="LOOP"
						AnimationBlendTime="0" />
				</AnimationState>
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="MONEY_STORED_AMOUNT_3"
					StateName="STATE_Unload">
					<Animation
						AnimationName="Ore_Gold_SHIDL"
						AnimationMode="LOOP"
						AnimationBlendTime="0" />
				</AnimationState>	
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="MONEY_STORED_AMOUNT_2"
					StateName="STATE_Unload">
					<Animation
						AnimationName="Ore_Gold_SHIDL"
						AnimationMode="LOOP"
						AnimationBlendTime="0" />
				</AnimationState>
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="MONEY_STORED_AMOUNT_1"
					StateName="STATE_Unload">
					<Animation
						AnimationName="Ore_Gold_SHIDL"
						AnimationMode="LOOP"
						AnimationBlendTime="0" />
					<Script>
						Prev = CurDrawablePrevAnimationState();
						if Prev == "STATE_Empty" then
						CurDrawableSetTransitionAnimState("TRANS_Fill")
						end
					</Script>							
				</AnimationState>											
				<AnimationState
					ParseCondStateType="PARSE_TRANSITION"
					StateName="TRANS_Fill">
					<Animation
						AnimationName="Ore_Gold_SHFILL"
						AnimationMode="ONCE"
						AnimationBlendTime="0" />
				</AnimationState>				
				<AnimationState
					ParseCondStateType="PARSE_TRANSITION"
					StateName="TRANS_Unload"
					Flags="START_FRAME_LAST">
					<Animation
						AnimationName="Ore_Gold_SHFILL"
						AnimationMode="ONCE_BACKWARDS"
						AnimationBlendTime="0" />
				</AnimationState>
			</ScriptedModelDraw>


<!-- Draw Armor -->

			<ScriptedModelDraw
				id="ModuleTag_Draw_Armor"
				OkToChangeModelColor="true">
				<ModelConditionState
					ParseCondStateType="PARSE_DEFAULT">
					<Model
						Name="SUHarvester_Armor" />
				</ModelConditionState>
				<ModelConditionState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="WEAPONSTATE_ONE">
					<Model
						Name="SUHarvester_Armor" />
				</ModelConditionState>				
				<AnimationState
					ParseCondStateType="PARSE_DEFAULT"
					StateName="STATE_No_Armor"
					Flags="START_FRAME_FIRST">
					<Animation
						AnimationName="SUHarvester_Armor"
						AnimationMode="ONCE_BACKWARDS">
					</Animation>					
					<Script>
						CurDrawableHideSubObjectPermanently("NewSkin")
						Prev = CurDrawablePrevAnimationState()
						if Prev == "STATE_Armor" then
						CurDrawableSetTransitionAnimState("TRANS_to_No_Armor")
						end
					</Script>						
				</AnimationState>
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="COMING_OUT_OF_FACTORY">
					<Script>
						CurDrawableHideSubObjectPermanently("NewSkin")
					</Script>						
				</AnimationState>
				<AnimationState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="WEAPONSTATE_ONE"
					StateName="STATE_Armor"
					Flags="START_FRAME_LAST">
					<Animation
						AnimationName="SUHarvester_Armor"
						AnimationMode="ONCE" />
					<Script>
						CurDrawableShowSubObjectPermanently("NewSkin")
						Prev = CurDrawablePrevAnimationState()
						if Prev == "STATE_No_Armor" then
						CurDrawableSetTransitionAnimState("TRANS_to_Armor")
						end
					</Script>						
				</AnimationState>
				<AnimationState
					ParseCondStateType="PARSE_TRANSITION"
					StateName="TRANS_to_No_Armor"
					Flags="START_FRAME_LAST">
					<Animation
						AnimationName="SUHarvester_Armor"
						AnimationMode="ONCE_BACKWARDS">
					</Animation>
					<Script>
						CurDrawableShowSubObjectPermanently("NewSkin")
					</Script>						
				</AnimationState>
				<AnimationState
						ParseCondStateType="PARSE_TRANSITION"
						StateName="TRANS_to_Armor"
						Flags="START_FRAME_FIRST">
						<Animation
							AnimationName="SUHarvester_Armor"
							AnimationMode="ONCE">
				    </Animation>
					<Script>
						CurDrawableShowSubObjectPermanently("NewSkin")
					</Script>					    
				</AnimationState>												
			</ScriptedModelDraw>
			
				<!-- TEMPORARY Armor Up Special power FX -->
<!--
				<ModelConditionState
					ParseCondStateType="PARSE_NORMAL"
					ConditionsYes="WEAPONSTATE_ONE">
					<Model
						Name="SUHarvester_SKN" />
					<ParticleSysBone
						BoneName="ROOTTRANSFORM"
						FXParticleSystemTemplate="ABGatewayCenterDist"
						FollowBone="true" />
					<ParticleSysBone
						BoneName="ROOTTRANSFORM"
						FXParticleSystemTemplate="GDIRefineryDamagedSmoke"
						FollowBone="true" />
				</ModelConditionState>
			</ScriptedModelDraw>
-->
      <!-- include Headlight draw module. -->
      <xi:include
				href="DATA:Includes/HeadlightDraw2.xml"
				xpointer="xmlns(n=uri:ea.com:eala:asset) xpointer(/n:HeadlightDraw2/child::*)" />

    </Draws>
    <Behaviors>
      <Physics
				id="ModuleTag_Physics" />
      <CreateObjectDie
				id="ModuleTag_CreateObjectDie"
				CreationList="SBMiner_Die_OCL">
        <DieMuxData
					DeathTypes="ALL" />
      </CreateObjectDie>
      <DestroyDie
				id="ModuleTag_Die">
        <DieMuxData
					DeathTypes="ALL" />
      </DestroyDie>
      <FXListBehavior
				id="ModuleTag_FXList">
				<DieMuxData
					DeathTypes="ALL" />
				<Event
					Index="onDeath"
					FX="FX_SOV_MediumVehicleDie" />
				<Event
					Index="onDeath"
					FX="FX_LargeBuildingDieExplosionRumble" />
	  </FXListBehavior>
						
			<SpecialPower
				id="ModuleTag_SpecialPower_ToggleArmorUp"
				SpecialPowerTemplate="SpecialPower_ToggleArmorUp"
				/>
			<!-- SpecialPower that toggles the Upgrade for activating armor up -->
			<ToggleStatusSpecialAbilityUpdate
				id="ModuleTag_ToggleArmorUpUpdate"
				Options="RECONSTITUTE_STORED_COMMAND"
				SpecialPowerTemplate="SpecialPower_ToggleArmorUp" >
				<ToggleState >
					<SkirmishAiInfo
						ToggleHint="TOGGLE_DEFAULT" />
				</ToggleState>
				<ToggleState
					AttributeModifier="AttributeModifier_ArmorUp"
					ObjectStatus="GENERIC_TOGGLE_STATE SPECIAL_ARMOR_ACTIVE" 
					ModelConditions="WEAPONSTATE_ONE "
					EnterStateSound="SOV_OreCollector_ReactiveArmorOn">
					<SkirmishAiInfo
						ToggleHint="TOGGLE_DEFENSE_SELF_ONLY"
						SelfDefenseDamageLookAheadTime="2s"
						SelfDefenseDamageLookBehindTime="2s"
						SelfDefenseDamageFraction="0.2" />
				</ToggleState>
			</ToggleStatusSpecialAbilityUpdate>

			<!-- override OreMinerBehavior with our forbidden status. -->
			<OreMinerBehavior
				id="ModuleTag_OreMinerBehavior"
				xai:joinAction="Append">
				<ObjectStatusValidation
					ForbiddenStatus="GENERIC_TOGGLE_STATE" />
			</OreMinerBehavior>
		
			<!-- no weapons, so no stance. -->
			<StancesBehavior
				id="ModuleTag_Stance"
				xai:joinAction="Remove"/>

			<!-- These help the AI decide when to use ARMOR UP -->
			<TrackIncomingWeaponFireBehavior
					 id="TrackIncomingWeaponFireForArmor" />
			<TrackDamage
					 id="TrackDamageForArmor"
					 TimeToTrack="2s"
					 InstantWeaponsOnly="true" />

		<xi:include
			href="DATA:Includes/SovietTerrorDroneSpawnUpgradePlayerPower.xml" />

		<xi:include
			href="DATA:Includes/SovietCrushUpgradePlayerPower.xml" />

	</Behaviors>
	<!-- AI is implemented in BaseMiner class, so none are needed here
			<AI>
				<AIUpdate
				  id="ModuleTag_AI"
				  AutoAcquireEnemiesWhenIdle="NO"></AIUpdate>
			</AI>
		-->
		<Body>
			<ActiveBody
				id="ModuleTag_Body"
				MaxHealth="500" />
		</Body>
		<ClientBehaviors>
			<ModelConditionAudioLoopClientBehavior id="ModuleTag_MoveLoopWater">
				<ModelConditionSound Sound="Ship_Small_MoveLoopWater" RequiredFlags="MOVING OVER_WATER" ExcludedFlags="DYING" />
			</ModelConditionAudioLoopClientBehavior>
			<ModelConditionAudioLoopClientBehavior id="ModuleTag_ShrunkenVoice">
				<ModelConditionSound Sound="SOV_OreCollector_VoiceShrunken" RequiredFlags="SHRINK_EFFECT" />
			</ModelConditionAudioLoopClientBehavior>
			<ModelConditionSoundSelectorClientBehavior id="ModuleTag_Armored">
				<Override RequiredFlags="WEAPONSTATE_ONE">
					<AudioArrayVoice>
						<AudioEntry Sound="SOV_OreCollector_VoiceSelectSpecialMS" AudioType="voiceSelect" />
					</AudioArrayVoice>
				</Override>
			</ModelConditionSoundSelectorClientBehavior>
		</ClientBehaviors>
		<Geometry
			IsSmall="false">
			<Shape
				Type="BOX"
				MajorRadius="20.0"
				MinorRadius="10.0"
				Height="15.0"
				ContactPointGeneration="VEHICLE" />
		</Geometry>
		<AudioArrayVoice>
			<AudioEntry Sound="SOV_OreCollector_VoiceCreate" AudioType="voiceCreated" />
			<AudioEntry Sound="SOV_OreCollector_VoiceMove" AudioType="voiceMove" />
			<AudioEntry Sound="SOV_OreCollector_VoiceMoveOreNode" AudioType="voiceSupply" />
			<AudioEntry Sound="SOV_OreCollector_VoiceMoveRefinery" AudioType="voiceDock" />
			<AudioEntry Sound="SOV_OreCollector_VoiceRetreat" AudioType="voiceRetreatToCastle" />
			<AudioEntry Sound="SOV_OreCollector_VoiceSelectMS" AudioType="voiceSelect" />
			<AudioEntry Sound="SOV_OreCollector_VoiceSelectUnderFireMS" AudioType="voiceSelectUnderFire" /> 
		</AudioArrayVoice>
		<AudioArraySound>
			<AudioEntry
				Sound="SOV_OreCollector_MoveStart"
				AudioType="soundMoveStart" />
			<AudioEntry
				Sound="SOV_OreCollector_IdleLoop"
				AudioType="soundAmbient" />
		</AudioArraySound>
		<VisionInfo
			VisionRange="200"
			ShroudClearingRange="=$STANDARD_SHROUD_CLEAR" />
		<CrusherInfo
			id="id_CrusherInfo"
			CrusherLevel="20"
			CrushableLevel="20"
			CrushWeapon="SovietCrushWeapon"
			CrushDecelerationPercent="80%">
			<ExtraCrushLevels CrusherLevel="1" CrushableLevel="20" ModelConditionMatch="OVER_WATER"/>	
		 </CrusherInfo>
	</GameObject>	
	
	<GameObject
		id="SovietMiner_Naval"
		inheritFrom="SovietMiner"
		EditorName="SovietMiner_Naval"
		ProductionQueueType="WATERCRAFT">
		<EquivalentTo>SovietMiner</EquivalentTo>
	</GameObject>
	
</AssetDeclaration>
