;------------------------------------------------------------------------------
;Command buttons are buttons that we place on the in game UI to create the
;context sensitive command sets
;------------------------------------------------------------------------------

; Which fields to use is highly dependant on the nature of the command, but here are all the fields, and an example
;CommandButton Command_NameOfCommand
;  Command            = The type of the command, from the Enum "TheGuiCommandNames"
;  Options            = Flags from "TheCommandOptionNames"
;  Object             = optional ThingTemplate from any ini in Object subfolder
;  Upgrade            = optional Upgrade from Upgrade.ini
;  WeaponSlot         = Slot from TheWeaponSlotTypeNamesLookupList
;  MaxShotsToFire     = Detail for weapon type buttons
;  Science            = Science prereq from Science.ini
;  SpecialPower       = Special Power from SpecialPower.ini
;  TextLabel          = String file label for Tooltip
;  DescriptLabel      = String file label for pop up description box
;  PurchasedLabel     = String file label for pop up if upgrade is already purchased
;  ConflictingLabel   = String file label for pop up if conflict prevents upgrade
;  ButtonImage        = Image name on control bar
;  CursorName         = Cursor from cursor.ini to use
;  InvalidCursorName  = Cursor from cursor.ini to use if action is illegal
;  ButtonBorderType   = Button border type, from CommandButtonMappedBorderTypeNames
;  RadiusCursorType   = Name of large radius cursor to use, from TheRadiusCursorNames
;  UnitSpecificSound  = Sound to play on activation
;End

; Example
;CommandButton Command_DaisyCutter
;  Command           = SPECIAL_POWER
;  SpecialPower      = SuperweaponDaisyCutter
;  Options           = NEED_SPECIAL_POWER_SCIENCE NEED_TARGET_POS CONTEXTMODE_COMMAND
;  TextLabel         = CONTROLBAR:DaisyCutter
;  ButtonImage       = SACDaisyCutter
;  ButtonBorderType  = ACTION 
;  DescriptLabel     = CONTROLBAR:TooltipDaisyCutter
;  RadiusCursorType  = DAISYCUTTER
;  InvalidCursorName = GenericInvalid
;End

