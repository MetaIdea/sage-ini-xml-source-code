; Moved from WildInfantry.INI Aug 24 2005
;//------------------------------------------------------------------------------
;// aka Mordor Banner Orc
;// i just replaced the name of the old mordor banner orc, this needs a proper hookup
Object WildBannerSpiderRider
  
	;// *** ART Parameters ***
	SelectPortrait         = UPMordor_Banner
  
	;// This is required for garrisoned objects - please put in all objects.
	ButtonImage = BMOrcPit_RedEyeBanner

	Draw = W3DScriptedModelDraw ModuleTag_01

		OkToChangeModelColor = Yes
	  
		StaticModelLODMode = Yes

;;====================== MODELS ================================================================
		DefaultModelConditionState
			Model						= MUSpdBnr_SKN
			Skeleton					= MUSpdBnr_SKL
			ParticleSysBone Sword01 SpiderRiderPoison FollowBone:Yes    ;  to be added to poison spear upgrade
			ParticleSysBone Sword01 SpiderRiderPoison2 FollowBone:Yes   ;  to be added to poison spear upgrade
		End

; --------- With Bow (including Fire Arrows Upgrade)------------
		ModelConditionState				= WEAPONSET_TOGGLE_1
			WeaponLaunchBone			= PRIMARY ARRROW
		End

;;================== ANIMATIONS =================================================================

		
		;//--------------WallScaling---------------

		AnimationState						= CLIMBING
			StateName						= STATE_Climbing
			Animation						= Climbing
				AnimationName				= MUSpdBnr_WALB
				AnimationMode				= LOOP
				AnimationBlendTime			= 10
			End
			BeginScript;script to set transition from moving
				Prev = CurDrawablePrevAnimationState()
				if Prev == "STATE_Running"  then CurDrawableSetTransitionAnimState("Trans_RunningToClimbing") return end
				;if Prev == "STATE_Rappelling"  then CurDrawableSetTransitionAnimState("Trans_RappellingToClimbing") return end
			EndScript
		End
		TransitionState = Trans_RunningToClimbing
			Animation = Transition
				AnimationName = MUSpdBnr_WALC
				AnimationMode = ONCE
			End
		End
		;TransitionState = Trans_RappellingToClimbing
		;	Animation = Transition
		;		AnimationName = MUSpdBnr_UNKNOWN
		;		AnimationMode = ONCE_BACKWARDS
		;	End
		;End
		AnimationState						= RAPPELLING
			StateName						= STATE_Rappelling
			Animation						= Rapelling
				AnimationName				= MUSpdBnr_WALD
				AnimationMode				= LOOP
				AnimationBlendTime			= 10
			End
			BeginScript;script to set transition from moving
				Prev = CurDrawablePrevAnimationState()
				if Prev == "STATE_Running"  then CurDrawableSetTransitionAnimState("Trans_RunningToRappelling") return end
				;if Prev == "STATE_Climbing"  then CurDrawableSetTransitionAnimState("Trans_ClimbingToRappelling") return end
			EndScript
		End
		TransitionState = Trans_RunningToRappelling
			Animation = Transition
				AnimationName = MUSpdBnr_WALG
				AnimationMode = ONCE
			End
		End
		;TransitionState = Trans_ClimbingToRappelling
		;	Animation = Transition
		;		AnimationName = MUSpdBnr_UNKNOWN
		;		AnimationMode = ONCE
		;	End
		;End		
		TransitionState = Trans_ClimbingToRunning
			Animation = Transition
				AnimationName = MUSpdBnr_WALF
				AnimationMode = ONCE
			End
		End
		TransitionState = Trans_RappellingToRunning
			Animation = Transition
				AnimationName = MUSpdBnr_WALE
				AnimationMode = ONCE
			End
		End
			
			
		; ------ Flying ------- ;
			

		AnimationState					= PASSENGER
			StateName					= STATE_Grabbed
			Animation					= Sword
				AnimationName			= MUSpdBnr_FLYA
				AnimationMode			= LOOP
			End
		End
		
		AnimationState					= FREEFALL
			StateName					= STATE_Falling
			Animation					= Sword
				AnimationName			= MUSpdBnr_FLYA
				AnimationMode			= LOOP
				AnimationBlendTime		= 10
			End
		End
		
		AnimationState        			= STUNNED_FLAILING
			StateName					= STATE_Fly
			Animation           		= Sword
				AnimationName       	= MUSpdBnr_FLYA
				AnimationMode       	= LOOP
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES2
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "Ready_Bow" or PrevState == "Moving_Bow" or PrevState == "Bored_Bow"								;;;;;;#TODO put in various bow states here
				then
					CurDrawableShowSubObject("arrrow")
					return "WantSword"
				elseif PrevState == "STATE_Fly"
				then
					if PrevAnim == "Bow" or PrevAnim == "WantSword"
					then
						CurDrawableShowSubObject("arrrow")
						return "WantSword"
					end
				end
					
				CurDrawableHideSubObject("arrrow")
				return "Sword"
			EndScript
		End

		AnimationState					= DYING BURNINGDEATH
			Animation
				AnimationName			= MUSpdBnr_DIEA
				AnimationMode			= ONCE
				AnimationBlendTime		= 10
			End
		End


		AnimationState					= DYING SPLATTED
			StateName					= STATE_Dead
			Animation					= Sword
				AnimationName			= MUSpdBnr_LNDA
				AnimationMode			= ONCE
			End
		End
		
				; ------ Dying ------- ;

		
		AnimationState        			= DYING
			Animation           		= Sword1
				AnimationName       	= MUSpdBnr_DIEA
				AnimationMode       	= ONCE
			End
		
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_Fly"
				then
					CurDrawableShowSubObject("arrrow")
					return "WantSword"
				end
			
				CurDrawableHideSubObject("arrrow")
				if GetClientRandomNumberReal(0,2) < 1
				then
					return "Sword1"
				else
					return "Sword2"
				end
			EndScript
		End
		
		AnimationState					= BURNINGDEATH
			Animation
				AnimationName			= MUSpdBnr_MFDA
				AnimationMode			= LOOP
				Distance				= 50
			End
		End

		AnimationState						= PARALYZED
			Animation
				AnimationName				= MUSpdBnr_IDLA
				AnimationMode				= LOOP
			End
		End

		AnimationState        			= STUNNED_STANDING_UP
			StateName					= STATE_GetUp
			Animation           		= Sword
				AnimationName       	= MUSpdBnr_GTPA
				AnimationMode       	= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_GetUp" or PrevState == "STATE_Land"
				then
					if PrevAnim == "Bow" or PrevAnim == "WantSword"
					then	
						CurDrawableShowSubObject("arrrow")
						return "WantSword"
					end
				end
				
				CurDrawableHideSubObject("arrrow")
				return "Sword"
			EndScript
		End
		
		AnimationState        			= STUNNED
			StateName					= STATE_Land
			Animation           		= Sword
				AnimationName       	= MUSpdBnr_LNDA
				AnimationMode       	= ONCE
			End
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_Fly"
				then
					if PrevAnim == "WantSword" or PrevAnim == "Bow"
					then
						CurDrawableShowSubObject("arrrow")
						return "WantSword"
					end
				end
				Flags						= MAINTAIN_FRAME_ACROSS_STATES3
				CurDrawableHideSubObject("arrrow")
				return "Sword"
			EndScript
		End


		AnimationState        			= ATTACKING TURN_LEFT
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpdBnr_TRNL
				AnimationMode       	= LOOP
			End
		End

		AnimationState        			= ATTACKING TURN_RIGHT
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpdBnr_TRNR
				AnimationMode       	= LOOP
			End
		End

		

		; ------ Attacking ------- ;
		
		AnimationState        			= FIRING_OR_PREATTACK_A
			StateName					= Ready_Sword
			
			Animation           		= AttackWithSwordA
				AnimationName       	= MUSpidRdr_ATKA
				AnimationMode       	= ONCE
				UseWeaponTiming			= Yes
			End
			Animation           		= AttackWithSwordB
				AnimationName       	= MUSpidRdr_ATKA
				AnimationMode       	= ONCE
				UseWeaponTiming			= Yes
			End
			Animation           		= AttackWithSwordD
				AnimationName       	= MUSpidRdr_ATKA
				AnimationMode       	= ONCE
				UseWeaponTiming			= Yes
			End
			BeginScript
				CurDrawableHideSubObject("arrrow")
			EndScript
		End
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

		
		AnimationState					= MOVING BACKING_UP
			StateName					= STATE_BackingUp
			Animation					= Sword
				AnimationName			= MUSpdBnr_BAKA
				AnimationMode			= LOOP
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				CurDrawableHideSubObject("arrrow")
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				if PrevState == "STATE_BackingUp"
				then
					if PrevAnim == "Bow" or PrevAnim == "WantSword"
					then
						return "WantSword"
					end
				end
				
				return "Sword"			
			EndScript
		End
		
		
		; -------- Turning -----------------;
		

		AnimationState        			= TURN_LEFT_HIGH_SPEED
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpdBnr_TRNL
				AnimationMode       	= LOOP
			End
		End


		AnimationState        			= TURN_RIGHT_HIGH_SPEED
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpdBnr_TRNR
				AnimationMode       	= LOOP
			End
		End


		AnimationState        			= TURN_LEFT
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpdBnr_TRNL
				AnimationMode       	= LOOP
			End
		End
		
		AnimationState        			= TURN_RIGHT
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpdBnr_TRNRH
				AnimationMode       	= LOOP
			End
		End



									
		; ------------ Moving ------------- ;
		
		AnimationState        			= MOVING
			StateName					= Moving_Sword
			SimilarRestart				= Yes
			Animation           		= run_s
				AnimationName       	= MUSpdBnr_RUNA
				AnimationMode       	= LOOP
			End
			Flags = MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				
				if PrevState == "Moving_Bow"
				then
					if PrevAnim == "runtrans_sb"
					then
						return "runtrans_sb_finish"
					elseif PrevAnim == "finishrun_s"
					then
						return "runnoblend_s"
					else
						return "finishrun_b"
					end
				elseif PrevAnim == "finishrun_b" or PrevAnim == "runtrans_sb_finish" or PrevAnim == "WantSword"
				then
					return "runtrans_bs"
				elseif PrevAnim == "runtrans_bs" or PrevAnim == "run_s" or PrevAnim == "runnoblend_s"
				then
					return "runnoblend_s"
				else
					return "run_s"
				end				
			EndScript
		End
		
		
		AnimationState					= EMOTION_UNCONTROLLABLY_AFRAID
			StateName					= STATE_Emotion_Sword
			Animation					= Sword
				AnimationName			= MUSpdBnr_FERA
				AnimationMode			= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				end
			EndScript
		End
		
	
		; -------- Alert ------- ;
		
		AnimationState					= EMOTION_ALERT
			StateName					= Ready_Sword
			
			Animation					= Alert_1
				AnimationName			= MUSpdBnr_IDLA
				AnimationMode			= LOOP
			End
			
			BeginScript
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")	
				end
			EndScript
		End


		
		
;;------------ EMOTIONS ------------------------------------------------------------------
;;======= AFRAID
 
		AnimationState					= EMOTION_AFRAID 
			StateName					= STATE_Emotion_Sword
			Animation					= Sword
				AnimationName			= MUSpdBnr_FERA
				AnimationMode			= ONCE
			End
			Animation					= Sword2
				AnimationName			= MUSpdBnr_FERA
				AnimationMode			= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				end
			EndScript
		End
;;====== CELEBRATING		
;
;		AnimationState					= EMOTION_CELEBRATING WEAPONSET_TOGGLE_1
;			StateName					= STATE_Emotion_Sword
;			Animation					= Sword
;				AnimationName			= RUElfWar_CHRST2
;				AnimationMode			= ONCE
;			End
;			Animation					= Sword2
;				AnimationName			= RUElfWar_CHRST2
;				AnimationMode			= ONCE
;			End
;			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
;			BeginScript
;				PrevState = CurDrawablePrevAnimationState()
;				CurDrawableHideSubObject("arrrow")
;				
;				if PrevState == "STATE_Emotion_Bow"
;				then
;					CurDrawableAllowToContinue()
;					if( CurDrawablePrevAnimFraction() > .89 )
;					then
;						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
;					end
;				elseif PrevState == "STATE_Emotion_Sword"
;				then
;					CurDrawableAllowToContinue()
;				end
;			EndScript
;		End
;		AnimationState					= EMOTION_CELEBRATING
;			StateName					= STATE_Emotion_Bow
;			Animation					= Bow
;				AnimationName			= RUElfWar_CHRB
;				AnimationMode			= ONCE
;			End
;			Animation					= Bow2
;				AnimationName			= RUElfWar_CHRB
;				AnimationMode			= ONCE
;			End
;			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
;			BeginScript
;				PrevState = CurDrawablePrevAnimationState()
;				CurDrawableShowSubObject("arrrow")
;				
;				if PrevState == "STATE_Emotion_Sword"
;				then
;					CurDrawableAllowToContinue()
;					if( CurDrawablePrevAnimFraction() > .89 )
;					then
;						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
;					end
;				elseif PrevState == "STATE_Emotion_Bow"
;				then
;					CurDrawableAllowToContinue()
;				end
;			EndScript	
;		End
;
;;====== TAUNTING
;
;		AnimationState					= EMOTION_TAUNTING WEAPONSET_TOGGLE_1
;			StateName					= STATE_Emotion_Sword
;			Animation					= Sword
;				AnimationName			= RUElfWar_TNTSV1
;				AnimationMode			= ONCE
;			End
;			Animation					= Sword2
;				AnimationName			= RUElfWar_TNTSV1
;				AnimationMode			= ONCE
;			End
;			Flags						= RESTART_ANIM_WHEN_COMPLETE ;MAINTAIN_FRAME_ACROSS_STATES
;			BeginScript
;				PrevState = CurDrawablePrevAnimationState()
;				CurDrawableHideSubObject("arrrow")
;				
;				if PrevState == "STATE_Emotion_Bow"
;				then
;					CurDrawableAllowToContinue()
;					if( CurDrawablePrevAnimFraction() > .89 )
;					then
;						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
;					end
;				elseif PrevState == "STATE_Emotion_Sword"
;					then
;						CurDrawableAllowToContinue()
;				end
;			EndScript
;		End
;		AnimationState					= EMOTION_TAUNTING
;			StateName					= STATE_Emotion_Bow
;			Animation					= Bow1
;				AnimationName			= RUElfWar_TNTB
;				AnimationMode			= ONCE
;			End
;			Animation					= Bow2
;				AnimationName			= RUElfWar_TNTB		; RUElfWar_TNTBX anim does not exist
;				AnimationMode			= ONCE
;			End
;			Flags						= RESTART_ANIM_WHEN_COMPLETE ;MAINTAIN_FRAME_ACROSS_STATES
;			BeginScript
;				PrevState = CurDrawablePrevAnimationState()
;				CurDrawableShowSubObject("arrrow")
;				
;				if PrevState == "STATE_Emotion_Sword"
;				then
;					CurDrawableAllowToContinue()
;					if( CurDrawablePrevAnimFraction() > .89 )
;					then
;						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
;					end
;				elseif PrevState == "STATE_Emotion_Bow"
;				then
;					CurDrawableAllowToContinue()
;				end
;			EndScript
;		End
;
;;====== POINTING

		
		AnimationState					= EMOTION_POINTING 
			StateName					= STATE_Emotion_Sword
			Animation					= Sword
				AnimationName			= MUSpdBnr_PNTA
				AnimationMode			= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrrow")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				elseif PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
				end
			EndScript
		End
		; ------ Selected ------ ;

		AnimationState					= RAISING_FLAG
			StateName					= STATE_Emotion_Bow
			Animation
				AnimationName			= MUSpdBnr_CHRA
				AnimationMode			= LOOP
			End
		End


		AnimationState				=	SELECTED 
			StateName				=	Selected_Sword
			
			Animation				=	ATNA
				AnimationName		=	MUSpdBnr_ATNB
				AnimationMode		=	LOOP
			End
			
			BeginScript
				CurDrawableHideSubObject("arrrow")
				
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "STATE_Emotion_Bow" or Prev == "STATE_Emotion_Sword" then CurDrawableAllowToContinue() end
				if Prev == "Bored_Sword"		then CurDrawableSetTransitionAnimState("TRANS_BS_Sword")		end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Selected")	
				end
				
			EndScript
		End

		
		
		; --------- Hit Reactions ---------- ;
		
		
		AnimationState						= HIT_REACTION HIT_LEVEL_1 
			StateName						= Bored_Sword
			Animation						= Hit_Level_1_a
				AnimationName				= MUSpdBnr_HITA
				AnimationMode				= ONCE
			End
		End

		
		; ------- Bored -------- ;
		
		IdleAnimationState
			StateName					= Bored_Sword
			
			Animation           		= Idle_Sword1
				AnimationName       	= MUSpdBnr_IDLA
				AnimationMode       	= ONCE
			End
			Flags						= RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				CurDrawableHideSubObject("arrrow")

				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "TRANS_SB_Sword"		then return "IdleNoFidget" end
				if Prev == "Selected_Sword"		then CurDrawableSetTransitionAnimState("TRANS_SB_Sword")		end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Selected")	
				end
			EndScript
		End
		

	End
 
    #include "..\..\..\includes\StunDrawModuleMedium.inc"

	;// ***DESIGN parameters ***
	Side = Wild
	EditorSorting = UNIT
	ThreatLevel = 1.0
	TransportSlotCount = TRANSPORTSLOTCOUNT_UNIT
	
	WeaponSet
		Conditions			= None 
		Weapon				= PRIMARY WildSpiderlingMandibles
		AutoChooseSources	= PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	End

	ArmorSet
		Conditions      = None
		Armor           = WildSpiderRiderArmor
		DamageFX        = NormalDamageFX
	End

	
	
	BuildCost	 		= MORDOR_BANNER_BUILDCOST
	BuildTime			= MORDOR_BANNER_BUILDTIME
	  
	VisionRange = GOBLIN_FIGHTER_VISION_RANGE
	VisionSide = 35%
	VisionRear = 25%
	ShroudClearingRange = GOBLIN_FIGHTER_SHROUD_RANGE
	  
	BountyValue			= MORDOR_BANNER_BOUNTY_VALUE
	DisplayName			= OBJECT:MordorBanner
	CrushableLevel		= 1  ;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
	CrusherLevel		= 1 ;What can I crush?: 0 = small animals, 1 = infantry, 2 = trees, 3 = vehicles
 	CrushRevengeWeapon	= BasicInfantryCrushRevenge

	CommandSet		= EmptyCommandSet
	CommandPoints	= 0

	;// *** AUDIO Parameters ***;

	VoiceAttack								= SpiderRiderVoiceAttack
	VoiceAttackCharge						= SpiderRiderVoiceAttackCharge
	VoiceAttackMachine						= SpiderRiderVoiceAttack
	VoiceAttackStructure					= SpiderRiderVoiceAttackBuilding
	VoiceCreated							= EVA:SpiderRidersCreated
	VoiceFullyCreated						= EVA:SpiderRidersCreated
	VoiceGuard								= SpiderRiderVoiceGuard
	VoiceMove								= SpiderRiderVoiceMove
	VoiceMoveOverWalls						= SpiderRiderVoiceMoveWalls
	VoiceMoveToCamp							= SpiderRiderVoiceMoveCamp
	VoiceMoveToHigherGround					= SpiderRiderVoiceMoveHighGround
	VoiceMoveWhileAttacking					= SpiderRiderVoiceDisengage
	VoicePriority							= 17
	VoiceRetreatToCastle					= SpiderRiderVoiceRetreat
	VoiceSelect								= SpiderRiderVoiceSelectMS
	VoiceSelectBattle 						= SpiderRiderVoiceSelectBattleMS

	SoundAmbient							= WildSpiderRiderAmbientLoopMS
	SoundImpact								= ImpactHorse
	; SoundMoveLoop							= WildSpiderRiderMoveLoop  Sorry, doesn't work on horde members. Use LGAS instead

	UnitSpecificSounds
		VoiceEnterUnitEvilMenTransportShip	= SpiderRiderVoiceMoveShip
		VoiceEnterUnitMordorMumakil			= SpiderRiderVoiceMove
		VoiceEnterUnitSlaughterHouse		= SpiderRiderVoiceMove
		VoiceGarrison						= SpiderRiderVoiceMove
		VoiceInitiateCaptureBuilding		= SpiderRiderVoiceCaptureBuilding
	End

	CrowdResponseKey = Goblin

	ClientBehavior = ModelConditionAudioLoopClientBehavior ModuleTag_foo
		;ModelCondition = Required:EMOTION_CELEBRATING	Excluded:DYING ENGAGED	Sound:EmotionGoblinCompilationVoxCheerSinglesLoop	;MOVING ATTACKING 
		;ModelCondition = Required:EMOTION_TAUNTING		Excluded:DYING ENGAGED	Sound:EmotionGoblinCompilationVoxTauntSinglesLoop	;MOVING ATTACKING
		ModelCondition = Required:RAISING_FLAG			Excluded:DYING ENGAGED	Sound:EmotionGoblinCompilationVoxCheerSinglesLoop
	End

	ClientBehavior = AnimationSoundClientBehavior ModuleTag_AnimAudioBehavior
		MaxUpdateRangeCap = 800
		AnimationSound = Sound:WeaponSwitchToSpearSpiderRiderMS			Animation:MUSpidRdr_SKL.MUSpidRdr_TGLB	Frames:1
		AnimationSound = Sound:WeaponSwitchToBowSpiderRiderMS			Animation:MUSpidRdr_SKL.MUSpidRdr_TGLA	Frames:1
	End
	
    #include "..\..\..\includes\StandardUnitEvaEvents.inc"

	Behavior = LargeGroupAudioUpdate ModuleTag_LGAU				; Tie into LargeGroupAudio system
		Key = SpiderRider
	End

	;// *** ENGINEERING Parameters ***

	RadarPriority = UNIT
	KindOf = PRELOAD SELECTABLE CAN_CAST_REFLECTIONS INFANTRY PATH_THROUGH_EACH_OTHER SCORE THROWN_OBJECT BANNER GRAB_AND_DROP IGNORES_SELECT_ALL CAN_CLIMB_WALLS
 
	Body = ActiveBody ModuleTag_02
		MaxHealth         = MORDOR_BANNER_HEALTH
		MaxHealthDamaged  = MORDOR_BANNER_HEALTH_DAMAGED
		BurningDeathBehavior = Yes
		BurningDeathFX       = FX_CavalryBurningFlame
	End
 
	Behavior = AIUpdateInterface ModuleTag_03
		AutoAcquireEnemiesWhenIdle		= No
		MoodAttackCheckRate				= 500
		HoldGroundCloseRangeDistance	= 40
		AttackPriority					= AttackPriority_Infantry
		AILuaEventsList					= MordorInfantryBannerFunctions
		BurningDeathTime				= BURNINGDEATH_DURATION_CAVALRY
	End

;	Behavior = EmotionTrackerUpdate	Module_EmotionTracker
;		TauntAndPointDistance		=	350		; max distance to taunted/pointed objet
;		TauntAndPointUpdateDelay	=	1000	; how often scan (milliseconds)
;		TauntAndPointExcluded		=	NONE
;		AfraidOf					=	EMOTION_AFRAIDOF_OBJECTFILTER
;		AlwaysAfraidOf				=	EMOTION_ALWAYS_AFRAIDOF_OBJECTFILTER
;		PointAt						=	EMOTION_POINTAT_OBJECTFILTER
;
;		HeroScanDistance			=	150
;		FearScanDistance			=	250
;
;		AddEmotion	=	Terror_Base
;		AddEmotion	=	Doom_Base
;		AddEmotion	=   BraceForBeingCrushed_Base
;		AddEmotion	=	UncontrollableFear_Base_Evil
;		AddEmotion	=	FearIdle_Base
;		AddEmotion	=	FearBusy_Base
;		AddEmotion	=	Point_Base
;		AddEmotion	=	Taunt_Base	
;		AddEmotion	=	CheerIdle_Base
;		AddEmotion	=	CheerBusy_Base
;		AddEmotion	=	HeroCheerIdle_Base
;		AddEmotion	=	HeroCheerBusy_Base
;		AddEmotion	=	Alert_Base
;	End	
   
	LocomotorSet
		Locomotor = TestWallScalingHordeLocomotor
		Condition = SET_NORMAL
		Speed     = NORMAL_MOUNTED_MED_MEMBER_SPEED
	End

	LocomotorSet
		Locomotor = BurningDeathLocomotorCavalry
		Condition = SET_BURNINGDEATH
		Speed	  = BURNINGDEATH_WANDERSPEED_CAVALRY
	End

	Behavior = PhysicsBehavior ModuleTag_04
		GravityMult = 1.0
		ShockStunnedTimeLow		= 1400	;msec
		ShockStunnedTimeHigh	= 2400	;msec
		ShockStandingTime		= 2133	;msec
	End
 
	Behavior = SlowDeathBehavior ModuleTag_05
		DeathTypes = ALL -KNOCKBACK
		SinkDelay = 3000
		SinkRate = 0.40     ; in Dist/Sec
		DestructionDelay = 8000
		Sound = INITIAL SpiderRiderDieMS
	End
 
	Behavior = SquishCollide ModuleTag_06
		;nothing
	End
 
	Behavior = SlowDeathBehavior ModuleTag_07
		; Same as normal death, but no sound (sound already played by SoundImpact = ... )
		DeathTypes = NONE +KNOCKBACK
		SinkDelay = 3000
		SinkRate = 0.40     ; in Dist/Sec
		DestructionDelay = 8000
		Sound = INITIAL SpiderRiderDieMS
	End
	
	Behavior = BezierProjectileBehavior ModuleTag_08 ; Module starts asleep, and wakes up when thrown.
		FirstHeight = 24  ; Height of Bezier control points above highest intervening terrain
		SecondHeight = 24
		FirstPercentIndent = 30% ; Percentage of shot distance control points are placed
		SecondPercentIndent = 70%
		TumbleRandomly = Yes

		CrushStyle = Yes ; I don't detonate, I just hit
		DieOnImpact = Yes
		BounceCount = 1   ; When I hit the ground, I'll arc again
		BounceDistance = 40 ; this far
		BounceFirstHeight = 24  ; Height of Bezier control points above highest intervening terrain
		BounceSecondHeight = 24
		BounceFirstPercentIndent = 20% ; Percentage of shot distance control points are placed
		BounceSecondPercentIndent = 80%

		GroundHitFX       = FX_ThrownRockGroundHit
		GroundBounceFX    = FX_ThrownRockBounceHit
	End

	;/////////////////////////////////////////////////////////
	;// BannerCarrierUpdate module
	;/////////////////////////////////////////////////////////
	Behavior = BannerCarrierUpdate BannerCarrierUpdateModuleTag
		IdleSpawnRate			= 10000							; spawn a new member every n seconds when idle (in miliseconds)
		MeleeFreeUnitSpawnTime		= 20000							; n miliseconds units must not have been fighting to be able to spawn units when idle (in miliseconds)
		DiedRespawnTime			= 10000							; how much time must pass after Banner Carrier dies before horde can spawn another
		MeleeFreeBannerReSpawnTime	= 20000							; how much time since horde has been fighting before a new Banner Carrier can be respawned
		
		BannerMorphFX		= FX_BannerCarrierMorph					; name of particle FX to use when the BannerCarrier morphs into the dest unit type
		UnitSpawnFX			= FX_BannerCarrierSpawnUnit				; name of particle FX to use when the BannerCarrier spawns a new unit
	End

	Behavior = SubObjectsUpgrade Show_Topper
		TriggeredBy		= Upgrade_AllFactionUpgrade
		ShowSubObjects	= Glow
	End	
		
	Geometry			= CYLINDER
	GeometryMajorRadius = 8.0
	GeometryMinorRadius = 8.0
	GeometryHeight		= 19.2
	GeometryIsSmall		= Yes
	Shadow				= SHADOW_DECAL
	ShadowSizeX			= 19
	ShadowSizeY			= 19
	ShadowTexture		= ShadowI
End

